{"version":3,"sources":["pages/Register/Register.module.scss","store/auth/types.ts","store/auth/reducers.ts","store/store.ts","api/quiz.tsx","store/auth/actions.ts","components/Logo/Logo.tsx","components/Button/Button.tsx","components/Menu/Menu.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","hoc/Layout/Layout.tsx","components/Panel/Panel.tsx","components/Loader/Loader.tsx","pages/MainPage/MainPage.tsx","pages/Register/Register.tsx","pages/Login/Login.tsx","pages/Logout/Logout.tsx","components/Table/Table.tsx","pages/Matches/Matches.tsx","pages/Matches/MatchDetail/DraggableRow/DraggableRow.tsx","pages/Matches/MatchSummary/MatchSummary.tsx","pages/Matches/MatchDetail/MatchDetail.tsx","pages/Leagues/Leagues.tsx","pages/Settings/Settings.tsx","pages/AddQuestion/Questions/Questions.tsx","pages/AddQuestion/AddQuestion.tsx","pages/Friends/Friends.tsx","pages/Leagues/LeagueDetail/LeagueDetail.tsx","pages/Tournament/Tournament.tsx","pages/Quiz/Quiz.tsx","App.tsx","reportWebVitals.ts","index.tsx","pages/Settings/Settings.module.scss","components/Menu/Menu.module.scss","pages/Matches/MatchDetail/MatchDetail.module.scss","pages/Login/Login.module.scss","components/Button/Button.module.scss","pages/MainPage/MainPage.module.scss","pages/Friends/Friends.module.scss","pages/Quiz/Quiz.module.scss","pages/Matches/Matches.module.scss","pages/Leagues/Leagues.module.scss","hoc/Layout/Layout.module.scss","pages/AddQuestion/Questions/Questions.module.scss","pages/Leagues/LeagueDetail/LeagueDetails.module.scss","components/Logo/Logo.module.scss","components/Footer/Footer.module.scss","pages/Tournament/Tournament.module.scss","components/Header/Header.module.scss","components/Panel/Panel.module.scss","components/Loader/Loader.module.scss","components/Table/Table.module.scss","pages/Matches/MatchSummary/MatchSummary.module.scss","pages/AddQuestion/AddQuestion.module.scss"],"names":["module","exports","AUTH_LOGIN_START","AUTH_LOGIN_SUCCESS","AUTH_LOGIN_FAIL","AUTH_LOGOUT","AUTH_NEW_TOKEN","AUTH_NEW_USER_DATA","initialState","loggedIn","loading","token","refreshToken","tokenExpiration","user","error","authReducer","state","action","type","newToken","newTokenExpiration","userData","rootReducer","combineReducers","auth","store","createStore","composeWithDevTools","applyMiddleware","thunk","quiz","axios","create","baseURL","interceptors","request","use","req","getState","headers","Authorization","response","undefined","originalRequest","config","console","log","status","_retry","url","localStorage","getItem","post","then","res","dispatch","authRefreshToken","data","access","catch","err","authLogout","Promise","reject","authLoginSuccess","setItem","toString","JSON","stringify","decodedToken","jwt_decode","exp","authLogin","authData","access_token","id","pk","email","first_name","last_name","username","refresh_token","authLoginFail","removeItem","Logo","to","className","styles","Logo__Text","Button","children","handleClicked","isSubmit","buttonClasses","push","Button__Transparent","Button__Filled","join","onClick","connector","connect","isLogged","Menu","exact","activeClassName","buttonStyles","Button__Transparent_Visited","Menu__Item","Menu__User","Menu__User__Name","Menu__User__Dropdown","Menu__User__Dropdown__Item","Header","Footer","Footer__Text","Layout","FullPage","CenteredBox","PageContent","Panel","Loader","MainPage","leaderboardList","useState","ranking","setRanking","useEffect","get","results","length","map","rankPerson","index","Leaderboard","LeaderboardBox","total_points","Main","Main__Content","Main__Button","Main__Promo","withRouter","history","useForm","register","errors","handleSubmit","watch","password","useRef","current","onSubmit","a","newUser","password1","password2","confirmpassword","Register","Register__FormBox","Register__Form","noValidate","Register__Form__Input","name","placeholder","autoComplete","ref","required","minLength","value","message","htmlFor","Register__ErrorMessage","Register__ErrorMessage_show","pattern","validate","Register__Button","Register__LoginInfo","authError","onLogin","notificationStore","addNotification","title","insert","container","animationIn","animationOut","dismiss","duration","Login","Login__FormBox","Login__Form","Login__Form__Input","Login__ErrorMessage","Login__ErrorMessage_show","Login__Button","Login__RegisterInfo","onLogout","Table","titles","UserId","matchesData","setMatchesData","page","setPage","matchesElements","match","newDate","Date","CreatedDate","toLocaleString","hour12","matchId","Id","TournamentId","Status","Matches","Matches__List","Pagination","count","Math","ceil","color","size","onChange","event","Matches__Button","Questions","DraggableRow","provided","snapshot","content","portal","usePortal","isDragging","child","innerRef","draggableProps","dragHandleProps","ReactDOM","createPortal","MatchSummary","matchData","setMatchData","MatchDetail","matchInfo","points_sum","portalTable","document","createElement","appendChild","classList","add","body","Error","props","setMatch","users","setUsers","questions","setQuestions","editMode","setEditMode","fetchedUsers","fetchedQuestions","matchDetails","params","fUser","userRequests","forEach","all","userEl","filter","usData","fQuestion","questionRequests","queEl","questionData","queData","filtUsers","filtUser","find","matchUs","filtQuestions","filtQuestion","toggleEditMode","mode","matchContent","Created__Edit__Users","droppableId","droppableProvided","droppableProps","draggableId","draggableProvided","draggableSnapshot","Created","Created__Panels","Created__Users","style","width","Created__Button","Created__Questions","que","Text","Created__Start","patch","Created__Edit__Questions","Panels","onDragEnd","result","destination","source","includes","newUsers","newMatch","newMatchUsers","foundUser","newUserList","newQuestions","newMatchQuestions","foundQuestion","newQuestionList","leaguesList","setLeaguesList","noLeagues","setNoLeagues","Leagues","Leagues__List","league","leagueId","Name","Leagues__Button","updateUserData","userInfo","parse","updatedUserInfo","setValue","e","newUserData","firstName","lastName","avatar","formData","FormData","append","Object","keys","Settings","Settings__Form","Settings__Form__Input","Settings__ErrorMessage","Settings__ErrorMessage_show","maxLength","Settings__Button","addedQuestions","setQuestionData","questionElements","concat","questionEl","Questions__List","AddQuestion","answerElements","setAnswerElements","setNewQuestions","ans","newAnswers","ansId","split","isCorrect","correctAnswers","newQuestion","question","answers","newLocalQuestion","newLocalQuestionList","target","reset","additionalAnswers","answerId","answerTag","AddQuestion__Form__Answer","AddQuestion__Form__Answer__Label","AddQuestion__ErrorMessage","AddQuestion__ErrorMessage_show","AddQuestion__Form__Answer__Radio","AddQuestion__Form","AddQuestion__Form__Input","AddQuestion__AnswersLabel","defaultChecked","AddQuestion__Control","AddQuestion__Control__Button","pop","AddQuestion__Button","friendsList","setFriendsList","handleRequest","requestId","actionType","newFriendsList","foundFriendIndex","findIndex","friendEl","splice","friendsListElement","frReq","FriendId","Friends__Buttons","Friends__Button","Friends","Friends__List","LeagueDetail","leagueData","setLeagueData","tournamentListElement","tournament_set","tour","tournamentId","LeagueDetail__Tournaments","LeagueDetail__Button","LeagueId","Tournament","quizData","setQuizData","refreshQuestion","non_field_errors","errMsg","quizContent","QuestionId","ansData","Quiz__Answers__Answer","newAnswer","MatchQuestionId","Answered","handleAnswerQuestion","Quiz__Waiting","Quiz","Quiz__Question","Quiz__Answers","mapStyles","opacity","transform","scale","bounce","val","spring","stiffness","damping","bounceTransition","atEnter","atLeave","atActive","onCheckAuth","userJSON","path","component","Logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","getElementById"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,kBAAoB,oCAAoC,eAAiB,iCAAiC,sBAAwB,wCAAwC,uBAAyB,yCAAyC,4BAA8B,8CAA8C,iBAAmB,mCAAmC,oBAAsB,wC,2HCsB/aC,EAAmB,mBACnBC,EAAqB,qBACrBC,EAAkB,kBAElBC,EAAc,cAEdC,EAAiB,iBACjBC,EAAqB,qBCnB5BC,EAA0B,CAC9BC,UAAU,EACVC,SAAS,EACTC,MAAO,GACPC,aAAc,GACdC,gBAAiB,EACjBC,KAAM,GACNC,MAAO,MAsBMC,EAnBK,WAA+D,IAA9DC,EAA6D,uDAArDT,EAAcU,EAAuC,uCAChF,OAAQA,EAAOC,MACb,KAAKjB,EACH,OAAO,2BAAKe,GAAZ,IAAmBP,SAAS,EAAMK,MAAO,OAC3C,KAAKZ,EACH,OAAO,2BAAKc,GAAZ,IAAmBN,MAAOO,EAAOP,MAAOC,aAAcM,EAAON,aAAcC,gBAAiBK,EAAOL,gBAAiBJ,UAAU,EAAMK,KAAMI,EAAOJ,KAAMJ,SAAS,IAClK,KAAKN,EACH,OAAO,2BAAKa,GAAZ,IAAmBP,SAAS,EAAOK,MAAOG,EAAOH,QACnD,KAAKV,EACH,OAAO,2BAAKY,GAAZ,IAAmBR,UAAU,EAAOC,SAAS,EAAOC,MAAO,GAAIG,KAAM,GAAIC,MAAO,OAClF,KAAKT,EACH,OAAO,2BAAKW,GAAZ,IAAmBN,MAAOO,EAAOE,SAAUP,gBAAiBK,EAAOG,qBACrE,KAAKd,EACH,OAAO,2BAAKU,GAAZ,IAAmBH,KAAK,2BAAKG,EAAMH,MAASI,EAAOI,YACrD,QACE,OAAOL,ICzBPM,EAAcC,0BAAgB,CAClCC,KAAMT,IASOU,EANDC,sBAAYJ,EACxBK,8BACAC,0BAAgBC,O,0ECZZC,EAAOC,IAAMC,OAAO,CACxBC,QAAS,2DAGXH,EAAKI,aAAaC,QAAQC,KAAI,SAACC,GAC7B,IAAMrB,EAAQS,EAAMa,WAQpB,OAPItB,EAAMQ,KAAKd,QACb2B,EAAIE,QAAJ,2BACKF,EAAIE,SADT,IAEEC,cAAc,UAAD,OAAYxB,EAAMQ,KAAKd,UAIjC2B,KAGTP,EAAKI,aAAaO,SAASL,SAAIM,GAAW,SAAC5B,GACzC,IAAM6B,EAAkB7B,EAAM8B,OAE9B,GADAC,QAAQC,IAAIH,KACmB,MAA1B7B,EAAM2B,SAASM,QAAmBJ,EAAgBK,QAAqC,yBAAxBL,EAAgBM,KAA4D,MAA1BnC,EAAM2B,SAASM,QAAiB,CACpJJ,EAAgBK,QAAS,EAEzB,IAAMrC,EAAeuC,aAAaC,QAAQ,gBAC1C,OAAOrB,EACJsB,KAAK,uBAAwB,CAC5B,QAAWzC,IAEZ0C,MAAK,SAACC,GAGL,OAFA7B,EAAM8B,SAASC,EAAiBF,EAAIG,KAAKC,SACzCf,EAAgBJ,QAAhB,cAA2C,UAAYe,EAAIG,KAAKC,OACzD3B,IAAMY,MAEdgB,OAAM,SAAAC,GACLf,QAAQC,IAAIc,MAMlB,OAJoC,MAA1B9C,EAAM2B,SAASM,QAAmBJ,EAAgBK,QAC1DvB,EAAM8B,SAASM,KAGVC,QAAQC,OAAOjD,MAGTgB,QCzBFkC,EAAmB,SAC9B3C,EACAX,EACAC,EACAC,GAOA,OALAsC,aAAae,QAAQ,QAASvD,GAC9BwC,aAAae,QAAQ,eAAgBtD,GACrCuC,aAAae,QAAQ,kBAAmBrD,EAAgBsD,YACxDhB,aAAae,QAAQ,WAAYE,KAAKC,UAAU/C,IAEzC,CACLH,KAAMhB,EACNW,KAAMQ,EACNX,MAAOA,EACPC,aAAcA,EACdC,gBAAiBA,IAWR4C,EAAmB,SAACrC,GAC/B+B,aAAae,QAAQ,QAAS9C,GAC9B,IAAMkD,EAA8BC,YAAWnD,GAE/C,OADA+B,aAAae,QAAQ,kBAAmBI,EAAaE,IAAIL,YAClD,CACLhD,KAAMb,EACNc,SAAUA,EACVC,mBAAoBiD,EAAaE,MAcxBC,EAAY,SAACC,GAAD,OAAkC,SAAClB,GAC1DA,EAtDO,CACLrC,KAAMjB,IAuDR8B,EACGqB,KAAK,eAAgBqB,GACrBpB,MAAK,YAAe,IAAZI,EAAW,EAAXA,KACDY,EAA8BC,YAAWb,EAAKiB,cAEpDnB,EACES,EACE,CACEW,GAAIlB,EAAK5C,KAAK+D,GACdC,MAAOpB,EAAK5C,KAAKgE,MACjBC,WAAYrB,EAAK5C,KAAKiE,WACtBC,UAAWtB,EAAK5C,KAAKkE,UACrBC,SAAUvB,EAAK5C,KAAKmE,UAEtBvB,EAAKiB,aACLjB,EAAKwB,cACLZ,EAAaE,SAIlBZ,OAAM,SAACC,GACNL,EApDuB,SAACK,GAC5B,MAAO,CACL1C,KAAMf,EACNW,MAAO8C,GAiDIsB,CAActB,SAIhBC,EAAa,WAKxB,OAJAX,aAAaiC,WAAW,SACxBjC,aAAaiC,WAAW,YACxBjC,aAAaiC,WAAW,gBACxBjC,aAAaiC,WAAW,mBACjB,CACHjE,KAAMd,I,kCCtFGgF,EAbF,WACX,OACE,cAAC,IAAD,CAAMC,GAAG,IAAIC,UAAU,YAAvB,SACE,qBAAKA,UAAWC,IAAOH,KAAvB,SAIE,qBAAKE,UAAWC,IAAOC,WAAvB,4B,iBCYOC,EAbA,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,SAAUC,EAAiD,EAAjDA,cAAezE,EAAkC,EAAlCA,KAAM0E,EAA4B,EAA5BA,SAC3CC,EAAgB,CAACN,IAAOE,QAO5B,MANY,gBAATvE,EACD2E,EAAcC,KAAKP,IAAOQ,qBACT,WAAT7E,GACR2E,EAAcC,KAAKP,IAAOS,gBAI1B,wBAAQV,UAAWO,EAAcI,KAAK,KAAMC,QAASP,EAAezE,KAAM0E,EAAW,SAAU,SAA/F,SAA0GF,K,iBCkE/FS,EAzEGC,aALM,SAACpF,GAAD,MAAsB,CAC5CqF,SAAUrF,EAAMQ,KAAKhB,SACrBwE,SAAUhE,EAAMQ,KAAKX,KAAKmE,YA4EbmB,EAtEF,SAAC,GAA4C,IAA1CE,EAAyC,EAAzCA,SAAUrB,EAA+B,EAA/BA,SACxB,OACE,qBAAKM,UAAWC,IAAOe,KAAvB,SACID,EAWA,qCACE,cAAC,IAAD,CACEhB,GAAG,WACHkB,OAAK,EACLC,gBAAiBC,IAAaC,4BAHhC,SAKE,qBAAKpB,UAAWC,IAAOoB,WAAvB,SACE,cAAC,EAAD,CAAQzF,KAAK,cAAb,yBAGJ,cAAC,IAAD,CACEmE,GAAG,WACHkB,OAAK,EACLC,gBAAiBC,IAAaC,4BAHhC,SAKE,qBAAKpB,UAAWC,IAAOoB,WAAvB,SACE,cAAC,EAAD,CAAQzF,KAAK,cAAb,yBAGJ,cAAC,IAAD,CACEmE,GAAG,gBACHkB,OAAK,EACLC,gBAAiBC,IAAaC,4BAHhC,SAKE,qBAAKpB,UAAWC,IAAOoB,WAAvB,SACE,cAAC,EAAD,CAAQzF,KAAK,cAAb,8BAGJ,qBAAKoE,UAAWC,IAAOoB,WAAvB,SACE,sBAAKrB,UAAWC,IAAOqB,WAAvB,UACE,qBAAKtB,UAAWC,IAAOsB,iBAAvB,SAA0C7B,IAC1C,sBAAKM,UAAWC,IAAOuB,qBAAvB,UACE,cAAC,IAAD,CAAMzB,GAAG,WAAT,SACE,qBAAKC,UAAWC,IAAOwB,2BAAvB,uBAIF,cAAC,IAAD,CAAM1B,GAAG,YAAT,SACE,qBAAKC,UAAWC,IAAOwB,2BAAvB,wBAIF,cAAC,IAAD,CAAM1B,GAAG,UAAT,SACE,qBAAKC,UAAWC,IAAOwB,2BAAvB,iCArDV,cAAC,IAAD,CACE1B,GAAG,SACHkB,OAAK,EACLC,gBAAiBC,IAAaC,4BAHhC,SAKE,qBAAKpB,UAAWC,IAAOoB,WAAvB,SACE,cAAC,EAAD,CAAQzF,KAAK,cAAb,4B,iBCZG8F,EATA,WACb,OACE,yBAAQ1B,UAAWC,IAAOyB,OAA1B,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,iBCGSC,EAVA,WACb,OACE,wBAAQ3B,UAAWC,IAAO0B,OAA1B,SACE,qBAAK3B,UAAWC,IAAO2B,aAAvB,uC,iBCeSC,GAZA,SAAC,GAA+B,IAA7BzB,EAA4B,EAA5BA,SAChB,OACE,sBAAKJ,UAAWC,IAAO6B,SAAvB,UACE,sBAAK9B,UAAWC,IAAO8B,YAAvB,UACE,cAAC,EAAD,IACA,qBAAK/B,UAAWC,IAAO+B,YAAvB,SAAqC5B,OAEvC,cAAC,EAAD,Q,4BCCS6B,GARD,SAAC,GAA8B,IAA5B7B,EAA2B,EAA3BA,SACf,OACE,qBAAKJ,UAAWC,KAAOgC,MAAvB,SACG7B,K,oBCLQ8B,GAJA,WACb,OAAO,qBAAKlC,UAAWC,KAAOiC,OAAvB,yB,oBCmEMC,GA5DE,WAAO,IAmBlBC,EAnBiB,EAMSC,mBAAwB,IANjC,oBAMdC,EANc,KAMLC,EANK,KAkCrB,OA1BAC,qBAAU,WACR/F,EACGgG,IAAI,aACJ1E,MAAK,YAAe,IAAZI,EAAW,EAAXA,KACPoE,EAAWpE,EAAKuE,YAEjBrE,OAAM,SAACC,GACNf,QAAQC,IAAIc,QAEf,IAGCgE,EAAQK,OAAS,IACnBP,EAAkBE,EAAQM,KAAI,SAACC,EAAYC,GACzC,OAAGA,EAAQ,GACD,oBAAsC9C,UAAWC,KAAO8C,YAAxD,SACN,sBAAK/C,UAAWC,KAAO+C,eAAvB,UACE,8BAAMH,EAAWnD,WACjB,8BAAMmD,EAAWI,mBAHJH,EAAQD,EAAWnD,UAO/B,SAKT,sBAAKM,UAAWC,KAAOiD,KAAvB,UACE,cAAC,GAAD,UACE,sBAAKlD,UAAWC,KAAOkD,cAAvB,UACE,yDACA,uKAIA,cAAC,IAAD,CAAMpD,GAAG,YAAT,SACE,qBAAKC,UAAWC,KAAOmD,aAAvB,SACE,cAAC,EAAD,CAAQxH,KAAK,SAAb,qCAKR,cAAC,GAAD,UACE,sBAAKoE,UAAWC,KAAOoD,YAAvB,UACE,6CACGjB,EAA+B,6BAAKA,IAAlB,cAAC,GAAD,a,yDCsFhBkB,gBA5IiC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACbC,aAAQ,IAAlDC,EADuD,EACvDA,SAAUC,EAD6C,EAC7CA,OAAQC,EADqC,EACrCA,aAAcC,EADuB,EACvBA,MAClCC,EAAWC,iBAAO,IACxBD,EAASE,QAAUH,EAAM,WAAY,IACrC,IAAMI,EAAQ,yCAAG,WAAO7F,GAAP,gBAAA8F,EAAA,sDACTC,EAAU,CACdxE,SAAUvB,EAAKuB,SACfH,MAAOpB,EAAKoB,MACZ4E,UAAWhG,EAAK0F,SAChBO,UAAWjG,EAAKkG,iBAElB5H,EACGqB,KAAK,sBAAuBoG,GAC5BnG,MAAK,SAACZ,GACLoG,EAAQ/C,KAAK,aAEdnC,OAAM,SAACC,GACNf,QAAQC,IAAIc,MAbD,2CAAH,sDAiBd,OACE,cAAC,GAAD,UACE,sBAAK0B,UAAWC,KAAOqE,SAAvB,UACE,oDACA,qBAAKtE,UAAWC,KAAOsE,kBAAvB,SACE,uBACEvE,UAAWC,KAAOuE,eAClBR,SAAUL,EAAaK,GACvBS,YAAU,EAHZ,UAKE,sBAAKzE,UAAWC,KAAOyE,sBAAvB,UACE,uBACErF,GAAG,WACHsF,KAAK,WACL/I,KAAK,OACLgJ,YAAY,WACZC,aAAa,WACbC,IAAKrB,EAAS,CACZsB,SAAU,mBACVC,UAAW,CACTC,MAAO,EACPC,QAAS,4BAIf,uBAAOC,QAAQ,WAAf,sBACA,qBACEnF,UACEC,KAAOmF,uBACP,KACC1B,EAAM,UAAgBzD,KAAOoF,6BAJlC,SAOG3B,EAAM,UAAgBA,EAAM,SAAawB,aAG9C,sBAAKlF,UAAWC,KAAOyE,sBAAvB,UACE,uBACErF,GAAG,QACHsF,KAAK,QACL/I,KAAK,QACLgJ,YAAY,SACZE,IAAKrB,EAAS,CACZsB,SAAU,mBACVO,QAAS,CACPL,MAAO,2CACPC,QAAS,6BAIf,uBAAOC,QAAQ,QAAf,oBACA,qBACEnF,UACEC,KAAOmF,uBACP,KACC1B,EAAM,OAAazD,KAAOoF,6BAJ/B,SAOG3B,EAAM,OAAaA,EAAM,MAAUwB,aAGxC,sBAAKlF,UAAWC,KAAOyE,sBAAvB,UACE,uBACErF,GAAG,WACHsF,KAAK,WACL/I,KAAK,WACLgJ,YAAY,WACZC,aAAa,eACbC,IAAKrB,EAAS,CAAEsB,SAAU,uBAE5B,uBAAOI,QAAQ,WAAf,sBACA,qBACEnF,UACEC,KAAOmF,uBACP,KACC1B,EAAM,UAAgBzD,KAAOoF,6BAJlC,SAOG3B,EAAM,UAAgBA,EAAM,SAAawB,aAG9C,sBAAKlF,UAAWC,KAAOyE,sBAAvB,UACE,uBACErF,GAAG,kBACHsF,KAAK,kBACL/I,KAAK,WACLgJ,YAAY,mBACZC,aAAa,eACbC,IAAKrB,EAAS,CACZsB,SAAU,mBACVQ,SAAU,SAACN,GAAD,OACRA,IAAUpB,EAASE,SAAW,kCAGpC,uBAAOoB,QAAQ,kBAAf,8BACA,qBACEnF,UACEC,KAAOmF,uBACP,KACC1B,EAAM,iBACLzD,KAAOoF,6BALb,SAQG3B,EAAM,iBAAuBA,EAAM,gBAAoBwB,aAG5D,qBAAKlF,UAAWC,KAAOuF,iBAAvB,SACE,cAAC,EAAD,CAAQ5J,KAAK,SAAS0E,UAAQ,EAA9B,4BAIN,sBAAKN,UAAWC,KAAOwF,oBAAvB,0CAC+B,cAAC,IAAD,CAAM1F,GAAG,SAAT,+B,oBCfxBc,GAxGGC,aATM,SAACpF,GAAD,MAAsB,CAC5CqF,SAAUrF,EAAMQ,KAAKhB,SACrBwK,UAAWhK,EAAMQ,KAAKV,UAGG,SAACyC,GAAD,MAAoB,CAC7C0H,QAAS,SAACxG,GAAD,OAAwBlB,EAASiB,EAAUC,QA2GvC0B,EApGD,SAAC,GAAkD,IAAhD8E,EAA+C,EAA/CA,QAAS5E,EAAsC,EAAtCA,SAAU2E,EAA4B,EAA5BA,UAA4B,EACnBlC,aAAQ,IAA3CC,EADsD,EACtDA,SAAUC,EAD4C,EAC5CA,OAAQC,EADoC,EACpCA,aAEpBK,EAAQ,yCAAG,WAAO7F,GAAP,gBAAA8F,EAAA,sDACTlI,EAAW,CACfwD,MAAOpB,EAAKoB,MACZsE,SAAU1F,EAAK0F,UAEjB8B,EAAQ5J,GALO,2CAAH,sDAyBd,OAjBAyG,qBAAU,WACNkD,GACFE,QAAkBC,gBAAgB,CAChCC,MAAO,SACPZ,QAAS,kCACTtJ,KAAM,SACNmK,OAAQ,MACRC,UAAW,aACXC,YAAa,CAAC,oBAAqB,sBACnCC,aAAc,CAAC,oBAAqB,sBACpCC,QAAS,CACPC,SAAU,SAIf,CAACV,IAGA,eAAC,GAAD,WACG3E,EAAW,cAAC,IAAD,CAAUhB,GAAG,MAAS,KAClC,sBAAKC,UAAWC,KAAOoG,MAAvB,UACE,uCACA,qBAAKrG,UAAWC,KAAOqG,eAAvB,SACE,uBACEtG,UAAWC,KAAOsG,YAClBvC,SAAUL,EAAaK,GACvBS,YAAU,EAHZ,UAKE,sBAAKzE,UAAWC,KAAOuG,mBAAvB,UACE,uBACEnH,GAAG,QACHsF,KAAK,QACL/I,KAAK,QACLgJ,YAAY,SACZC,aAAa,QACbC,IAAKrB,EAAS,CACZsB,SAAU,mBACVO,QAAS,CACPL,MAAO,2CACPC,QAAS,6BAIf,uBAAOC,QAAQ,QAAf,oBACA,qBACEnF,UACEC,KAAOwG,oBACP,KACC/C,EAAM,OAAazD,KAAOyG,0BAJ/B,SAOGhD,EAAM,OAAaA,EAAM,MAAUwB,aAGxC,sBAAKlF,UAAWC,KAAOuG,mBAAvB,UACE,uBACEnH,GAAG,WACHsF,KAAK,WACL/I,KAAK,WACLgJ,YAAY,WACZC,aAAa,mBACbC,IAAKrB,EAAS,CAAEsB,SAAU,uBAE5B,uBAAOI,QAAQ,WAAf,sBACA,qBACEnF,UACEC,KAAOwG,oBACP,KACC/C,EAAM,UAAgBzD,KAAOyG,0BAJlC,SAOGhD,EAAM,UAAgBA,EAAM,SAAawB,aAG9C,qBAAKlF,UAAWC,KAAO0G,cAAvB,SACE,cAAC,EAAD,CAAQ/K,KAAK,SAAS0E,UAAQ,EAA9B,4BAIN,sBAAKN,UAAWC,KAAO2G,oBAAvB,2CAEE,uBACA,cAAC,IAAD,CAAM7G,GAAG,YAAT,4CC9FKc,GAbGC,YAAQ,MANC,SAAC7C,GAC1B,MAAO,CACL4I,SAAU,kBAAM5I,EAASM,SAiBdsC,EATA,SAAC,GAAkC,IAAhCgG,EAA+B,EAA/BA,SAKhB,OAJArE,qBAAU,WACRqE,MACC,CAACA,IAEG,cAAC,IAAD,CAAU9G,GAAG,S,kDCIP+G,GAlBD,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,OAAQ3G,EAA2B,EAA3BA,SAEvB,OACE,wBAAOJ,UAAWC,KAAO6G,MAAzB,UACE,gCACE,6BAEIC,EAAOnE,KAAI,SAAAkD,GAAK,OACd,6BAAiBA,GAARA,UAKjB,gCAAQ1F,QCFRS,GAAYC,aAJM,SAACpF,GAAD,MAAsB,CAC5CsL,OAAQtL,EAAMQ,KAAKX,KAAK8D,OAqGXiE,eAAWzC,IA7Fc,SAAC,GAAyB,IAAvB0C,EAAsB,EAAtBA,QAASyD,EAAa,EAAbA,OAAa,EACzB3E,mBAAc,IADW,oBACxD4E,EADwD,KAC3CC,EAD2C,OAEvC7E,mBAAS,GAF8B,oBAExD8E,EAFwD,KAElDC,EAFkD,KAI/D5E,qBAAU,WACLwE,GACDvK,EACCgG,IADD,gBACcuE,EADd,cAECjJ,MAAK,YAAe,IAAZI,EAAW,EAAXA,KACP+I,EAAe/I,MAEhBE,OAAM,SAACC,GACNf,QAAQC,IAAIc,QAGf,CAAC0I,IAEJ,IA6BIK,EAAkB,KAiBtB,MAhBI,UAAWJ,IACbI,EAAe,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAavE,QAAQE,KAAI,SAAC0E,GAC1C,IACMC,EADO,IAAIC,KAAKF,EAAMG,aACPC,oBAAetK,EAAW,CAAEuK,QAAQ,IAEzD,OACE,qBAAmB/G,QAAS,kBA1BPgH,GA0BgCN,EAAMO,QAzB/DtE,EAAQ/C,KAAR,mBAAyBoH,IADD,IAACA,GA0BrB,UACE,6BAAKN,EAAMO,KACX,6BAAKP,EAAMQ,cAAgB,oBAC3B,6BAAKP,IACL,6BAAKD,EAAMS,WAJJT,EAAMO,QAWnB,cAAC,GAAD,UACE,qBAAK7H,UAAWC,KAAO+H,QAAvB,SACG,UAAWf,EACV,qCACE,yCACA,qBAAKjH,UAAWC,KAAOgI,cAAvB,SACE,cAAC,GAAD,CAAOlB,OAAQ,CAAC,WAAY,gBAAiB,OAAQ,UAArD,SAAiEM,MAEnE,qBAAKrH,UAAWC,KAAOiI,WAAvB,SACE,cAACA,GAAA,EAAD,CACEC,MAAOC,KAAKC,KAAKpB,EAAYkB,MAAQ,IACrCG,MAAM,UACNC,KAAK,QACLpB,KAAMA,EACNqB,SA/CW,SACvBC,EACAxD,GAEAxI,EACGgG,IADH,gBACgBuE,EADhB,0BACwC/B,IACrClH,MAAK,SAACZ,GACL+J,EAAe/J,EAASgB,MACxBiJ,EAAQnC,MAET5G,OAAM,SAACC,GACNf,QAAQC,IAAIc,WAuCR,qBAAK0B,UAAWC,KAAOyI,gBAAvB,SACE,cAAC,EAAD,CAAQ9M,KAAK,SAASyE,cAjER,WACxB5D,EAAMqB,KAAK,UAAW,CAACkJ,OAAQ,CAACA,GAAS2B,UAAW,KACnD5K,MAAK,YAAe,IAAZI,EAAW,EAAXA,KACPoF,EAAQ/C,KAAR,mBAAyBrC,EAAK0J,QAE/BxJ,OAAM,SAAAC,GACLf,QAAQC,IAAIc,OA2DJ,+BAIJ,cAAC,GAAD,Y,qCC1EKsK,GAtBM,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,SAAUC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,OAC7CC,EAAqBH,EAASI,WAE9BC,EACJ,yDACErE,IAAK+D,EAASO,UACVP,EAASQ,gBACTR,EAASS,iBAHf,IAIEtJ,UAAU,gBAJZ,UAME,6BAAK+I,EAAQ1J,KACb,6BAAK0J,EAAQrJ,eAIjB,OAAKuJ,EAKEM,IAASC,aAAaL,EAAOH,GAJ3BG,G,oBCeIM,GApCM,SAAC,GAAoC,IAAlC7B,EAAiC,EAAjCA,QAAiC,EACrBvF,mBAAc,IADO,oBAChDqH,EADgD,KACrCC,EADqC,KAcvD,OAXAnH,qBAAU,WACR/F,EACGgG,IADH,mCACmCmF,IAChC7J,MAAK,YAAe,IAAZI,EAAW,EAAXA,KACPwL,EAAaxL,MAEdE,OAAM,SAAAC,GACLf,QAAQC,IAAIc,QAEf,CAACsJ,IAGF,cAAC,GAAD,UACE,sBAAK5H,UAAWC,KAAO2J,YAAvB,UACE,mDAAsBhC,MACpB,OAAC8B,QAAD,IAACA,OAAD,EAACA,EAAWhH,SACV,cAAC,GAAD,CAAOqE,OAAQ,CAAC,WAAY,UAA5B,SACG2C,EAAUhH,QAAQE,KAAI,SAACiH,GAAD,OACrB,+BACE,6BAAKA,EAAUnK,WACf,6BAAKmK,EAAUC,eAFRD,EAAUnK,eAQzB,cAAC,GAAD,UCQJqK,GAA2BC,SAASC,cAAc,SAClDjB,GAAsBgB,SAASC,cAAc,SAInD,GAHAF,GAAYG,YAAYlB,IAClB,OAANA,SAAM,IAANA,OAAQmB,UAAUC,IAAI,yBAEjBJ,SAASK,KACZ,MAAM,IAAIC,MAAM,uCAGlBN,SAASK,KAAKH,YAAYlB,IAE1B,IAqUe1F,gBArUK,SAACiH,GAAmD,IAAD,EAC3ClI,mBAA2B,MADgB,oBAC9DiF,EAD8D,KACvDkD,EADuD,OAE3CnI,mBAAqB,IAFsB,oBAE9DoI,EAF8D,KAEvDC,EAFuD,OAGnCrI,mBAAgB,IAHmB,oBAG9DsI,EAH8D,KAGnDC,EAHmD,OAIrCvI,mBAAuB,QAJc,oBAI9DwI,EAJ8D,KAIpDC,EAJoD,KAMrEtI,qBAAU,WACR,IAAIuI,EACAC,EACAC,EAEJxO,EACGgG,IADH,iBACiB8H,EAAMjD,MAAM4D,OAAOtD,QADpC,MAEG7J,MAAK,YAAe,IAAZI,EAAW,EAAXA,KAEP4M,GADAE,EAAe9M,GACa6I,OAAOpE,KAAK,SAACuI,GAAD,MAAiB,CAAEtD,GAAIsD,MAC/D,IAAMC,EAAsB,GAI5B,OAHAL,EAAaM,SAAQ,SAACF,GACpBC,EAAa5K,KAAK/D,EAAMgG,IAAN,qBAAwB0I,EAAMtD,GAA9B,UAEbrJ,QAAQ8M,IAAIF,MAEpBrN,MAAK,SAAAZ,GACJ4N,EAAeA,EAAanI,KAAI,SAAC2I,GAC/B,IAAMxP,EAAWoB,EAASqO,QAAO,SAACC,GAAD,OAAiBA,EAAOtN,KAAK0J,KAAO0D,EAAO1D,MAAI,GAAG1J,KACnF,OAAO,eAAIpC,MAEbkP,EAAajE,OAAS+D,EAEtBC,EAAmBC,EAAatC,UAAU/F,KAAK,SAAC8I,GAAD,MAAqB,CAAE7D,GAAI6D,MAC1E,IAAMC,EAA0B,GAIhC,OAHAX,EAAiBK,SAAQ,SAACK,GACxBC,EAAiBnL,KAAK/D,EAAMgG,IAAN,oBAAuBiJ,EAAU7D,GAAjC,UAEjBrJ,QAAQ8M,IAAIK,MAClB5N,MAAK,SAACZ,GAQP,OAPA6N,EAAmBA,EAAiBpI,KAAI,SAACgJ,GACvC,IAAMC,EAAe1O,EAASqO,QAAO,SAACM,GAAD,OAAkBA,EAAQ3N,KAAK0J,KAAO+D,EAAM/D,MAAI,GAAG1J,KACxF,OAAO,eAAI0N,MAEbZ,EAAatC,UAAYqC,EACzBR,EAASS,GAEFxO,EAAMgG,IAAI,kBAElB1E,MAAK,YAAe,IACbgO,EADY,EAAX5N,KACgBuE,QAAQ8I,QAAO,SAACQ,GACrC,OAAQf,EAAajE,OAAOiF,MAAK,SAACC,GAAD,OAAkBA,EAAQrE,KAAOmE,EAASnE,SAI7E,OAFA6C,EAASqB,GAEFtP,EAAMgG,IAAI,iBAElB1E,MAAK,YAAe,IACboO,EADY,EAAXhO,KACoBuE,QAAQ8I,QAAO,SAACY,GACzC,OAAQnB,EAAatC,UAAUsD,MAAK,SAACC,GAAD,OAAkBA,EAAQrE,KAAOuE,EAAavE,SAEpF+C,EAAauB,MAEd9N,OAAM,SAACC,GACNf,QAAQC,IAAIc,QAEf,CAACiM,EAAMjD,MAAM4D,OAAOtD,UAEvB,IAAMyE,EAAiB,SAACC,GAEpBxB,EADED,IAAayB,EACH,OAEAA,IA+FZC,EAAe,cAAC,GAAD,IACnB,GAAIjF,EACF,OAAQA,EAAMS,QACZ,IAAK,UACHwE,EACE,qCACgB,UAAb1B,EACC,cAAC,GAAD,UACE,sBAAK7K,UAAWC,KAAOuM,qBAAvB,UACE,uCACA,cAAC,KAAD,CAAWC,YAAY,WAAvB,SACG,SAACC,GAAD,OACC,6CAAK5H,IAAK4H,EAAkBtD,UAAcsD,EAAkBC,gBAA5D,aACE,eAAC,GAAD,CAAO5F,OAAQ,CAAC,KAAM,YAAtB,UACG0D,EAAM7H,KAAI,SAAC2I,EAAQzI,GAAT,OACT,cAAC,KAAD,CACE8J,YAAarB,EAAO7L,SACpBoD,MAAOA,EAFT,SAKG,SAAC+J,EAAmBC,GAApB,OACC,cAAC,GAAD,CAAcjE,SAAUgE,EACxB/D,SAAUgE,EAAmB9D,OAAQA,GAAQD,QAAS,CAAC1J,GAAIkM,EAAO1D,GAAInI,SAAU6L,EAAO7L,cAJpF6L,EAAO1D,OAQf6E,EAAkB9H,0BAO7B,KACJ,cAAC,GAAD,UACE,sBAAK5E,UAAWC,KAAO2J,YAAvB,UACE,2CAAcW,EAAMjD,MAAM4D,OAAOtD,WACjC,sBAAK5H,UAAWC,KAAO8M,QAAvB,UACE,sBAAK/M,UAAWC,KAAO+M,gBAAvB,UACE,sBAAKhN,UAAWC,KAAOgN,eAAvB,UACE,uCACA,cAAC,KAAD,CAAWR,YAAY,aAAvB,SACC,SAACC,GAAD,OACG,6CAAK5H,IAAK4H,EAAkBtD,UAAcsD,EAAkBC,gBAA5D,IAA4EO,MAAO,CAACC,MAAO,QAA3F,SACE,eAAC,GAAD,CAAOpG,OAAQ,CAAC,KAAM,YAAtB,UACGO,EAAMN,OAAOpE,KAAI,SAAC2I,EAAQzI,GAAT,OAChB,cAAC,KAAD,CACA8J,YAAarB,EAAO7L,SACpBoD,MAAOA,EAFP,SAKC,SAAC+J,EAAmBC,GAApB,OACC,cAAC,GAAD,CAAcjE,SAAUgE,EACxB/D,SAAUgE,EAAmB9D,OAAQA,GAAQD,QAAS,CAAC1J,GAAIkM,EAAO1D,GAAInI,SAAU6L,EAAO7L,cAJpF6L,EAAO1D,OAQb6E,EAAkB9H,qBAK3B,qBAAK5E,UAAWC,KAAOmN,gBAAvB,SACE,cAAC,EAAD,CACExR,KAAK,SACLyE,cAAe,kBAAMgM,EAAe,UAFtC,6BAQJ,sBAAKrM,UAAWC,KAAOoN,mBAAvB,UACE,2CAEA,cAAC,KAAD,CAAWZ,YAAY,iBAAvB,SACC,SAACC,GAAD,OACG,6CAAK5H,IAAK4H,EAAkBtD,UAAcsD,EAAkBC,gBAA5D,IAA4EO,MAAO,CAACC,MAAO,QAA3F,SACE,eAAC,GAAD,CAAOpG,OAAQ,CAAC,KAAM,YAAtB,UACGO,EAAMqB,UAAU/F,KAAI,SAAC0K,EAAKxK,GAAN,OACnB,cAAC,KAAD,CACA8J,YAAaU,EAAIC,KACjBzK,MAAOA,EAFP,SAKC,SAAC+J,EAAmBC,GAApB,OACC,cAAC,GAAD,CAAcjE,SAAUgE,EACxB/D,SAAUgE,EAAmB9D,OAAQA,GAAQD,QAAS,CAAC1J,GAAIiO,EAAIzF,GAAInI,SAAU4N,EAAIC,UAJ9ED,EAAIzF,OAQV6E,EAAkB9H,qBAK3B,qBAAK5E,UAAWC,KAAOmN,gBAAvB,SACE,cAAC,EAAD,CACExR,KAAK,SACLyE,cAAe,kBAAMgM,EAAe,cAFtC,oCASN,qBAAKrM,UAAWC,KAAOuN,eAAvB,SACE,qBAAKxN,UAAWC,KAAOmN,gBAAvB,SACE,cAAC,EAAD,CAAQxR,KAAK,SAASyE,cAtHjB,WACvB5D,EACGgR,MADH,iBACmBlD,EAAMjD,MAAM4D,OAAOtD,QADtC,KACkD,CAAEG,OAAQ,WACzDhK,MAAK,WACJwM,EAAMhH,QAAQ/C,KAAd,gBAA4B+J,EAAMjD,MAAM4D,OAAOtD,QAA/C,SAEDvJ,OAAM,SAAAC,GACLf,QAAQC,IAAIc,OA+GE,+BAMI,cAAbuM,EACC,cAAC,GAAD,UACE,sBAAK7K,UAAWC,KAAOyN,yBAAvB,UACE,2CACA,cAAC,KAAD,CAAWjB,YAAY,eAAvB,SACG,SAACC,GAAD,OACC,6CAAK5H,IAAK4H,EAAkBtD,UAAcsD,EAAkBC,gBAA5D,aACE,eAAC,GAAD,CAAO5F,OAAQ,CAAC,KAAM,YAAtB,UACG4D,EAAU/H,KAAI,SAACgJ,EAAO9I,GAAR,OACb,cAAC,KAAD,CACE8J,YAAahB,EAAM2B,KACnBzK,MAAOA,EAFT,SAKG,SAAC+J,EAAmBC,GAApB,OACC,cAAC,GAAD,CAAcjE,SAAUgE,EACxB/D,SAAUgE,EAAmB9D,OAAQA,GAAQD,QAAS,CAAC1J,GAAIuM,EAAM/D,GAAInI,SAAUkM,EAAM2B,UAJlF3B,EAAM/D,OAQd6E,EAAkB9H,0BAO7B,QAGR,MACF,IAAK,SACH2H,EAAgB,cAAC,IAAD,CAAUxM,GAAE,gBAAWwK,EAAMjD,MAAM4D,OAAOtD,WAC1D,MACF,IAAK,QACH2E,EAAgB,cAAC,GAAD,CAAc3E,QAAS2C,EAAMjD,MAAM4D,OAAOtD,UAC1D,MACF,QACE,OAAO,uDAIb,OACE,qBAAK5H,UAAWC,KAAO0N,OAAvB,SACE,cAAC,KAAD,CAAiBC,UAxPH,SAACC,GACjB,GAAKA,EAAOC,aAIRD,EAAOC,YAAYhL,QAAU+K,EAAOE,OAAOjL,OAI3C+K,EAAOC,YAAYrB,cAAgBoB,EAAOE,OAAOtB,cAI/CoB,EAAOC,YAAYrB,YAAYuB,SAAS,UAAYH,EAAOE,OAAOtB,YAAYuB,SAAS,UACvFH,EAAOC,YAAYrB,YAAYuB,SAAS,cAAgBH,EAAOE,OAAOtB,YAAYuB,SAAS,cAIjG,GAAuC,aAAnCH,EAAOC,YAAYrB,YAA4B,CACjD,IAAMwB,EAAa,aAAOxD,GACpByD,EAAa,eAAO5G,GACtB6G,EAAkB,aAAOD,EAASlH,QAChCoH,EAAiBD,EAAclC,MAAM,SAACR,GAAD,OAAiBA,EAAO/L,WAAamO,EAAOjB,eAEvFuB,EAAgBA,EAAc3C,QAAO,SAACC,GAAD,OAAiBA,EAAO/L,WAAamO,EAAOjB,eACjFqB,EAASzN,KAAK4N,GAEd5D,EAAS,2BAAK0D,GAAN,IAAgBlH,OAAO,aAAKmH,MACpCzD,EAAS,aAAIuD,IAEb,IAAMI,EAAcF,EAAcvL,KAAI,SAAC2I,GAAD,OAAiBA,EAAO1D,MAC9DpL,EAAMgR,MAAN,iBAAsBlD,EAAMjD,MAAM4D,OAAOtD,QAAzC,KAAqD,CAAC,OAAUyG,SAE3D,GAAuC,eAAnCR,EAAOC,YAAYrB,YAA8B,CAC1D,IAAIwB,EAAa,aAAOxD,GAClByD,EAAa,eAAO5G,GACtB6G,EAAkB,aAAOD,EAASlH,QAChCoH,EAAiBH,EAAShC,MAAM,SAACR,GAAD,OAAiBA,EAAO/L,WAAamO,EAAOjB,eAElFqB,EAAWA,EAASzC,QAAO,SAACC,GAAD,OAAiBA,EAAO/L,WAAamO,EAAOjB,eACvEuB,EAAc3N,KAAK4N,GAEnB5D,EAAS,2BAAK0D,GAAN,IAAgBlH,OAAO,aAAKmH,MACpCzD,EAAS,aAAIuD,IAEb,IAAMI,EAAcF,EAAcvL,KAAI,SAAC2I,GAAD,OAAiBA,EAAO1D,MAC9DpL,EAAMgR,MAAN,iBAAsBlD,EAAMjD,MAAM4D,OAAOtD,QAAzC,KAAqD,CAAC,OAAUyG,SAE3D,GAAuC,iBAAnCR,EAAOC,YAAYrB,YAAgC,CAC5D,IAAM6B,EAAiB,aAAO3D,GACxBuD,EAAa,eAAO5G,GACtBiH,EAAsB,aAAOL,EAASvF,WACpC6F,EAAqBD,EAAkBtC,MAAM,SAACH,GAAD,OAAkBA,EAAQyB,OAASM,EAAOjB,eAE7F2B,EAAoBA,EAAkB/C,QAAO,SAACM,GAAD,OAAkBA,EAAQyB,OAASM,EAAOjB,eACvF0B,EAAa9N,KAAKgO,GAElBhE,EAAS,2BAAK0D,GAAN,IAAgBvF,UAAU,aAAK4F,MACvC3D,EAAa,aAAI0D,IAEjB,IAAMG,EAAkBF,EAAkB3L,KAAI,SAACgJ,GAAD,OAAgBA,EAAM/D,MACpEpL,EAAMgR,MAAN,iBAAsBlD,EAAMjD,MAAM4D,OAAOtD,QAAzC,KAAqD,CAAC,UAAa6G,SAE9D,GAAuC,mBAAnCZ,EAAOC,YAAYrB,YAAkC,CAC9D,IAAI6B,EAAiB,aAAO3D,GACtBuD,EAAa,eAAO5G,GACtBiH,EAAsB,aAAOL,EAASvF,WACpC6F,EAAqBF,EAAarC,MAAM,SAACH,GAAD,OAAkBA,EAAQyB,OAASM,EAAOjB,eAExF0B,EAAeA,EAAa9C,QAAO,SAACM,GAAD,OAAkBA,EAAQyB,OAASM,EAAOjB,eAC7E2B,EAAkB/N,KAAKgO,GAEvBhE,EAAS,2BAAK0D,GAAN,IAAgBvF,UAAU,aAAK4F,MACvC3D,EAAa,aAAI0D,IAEjB,IAAMG,EAAkBF,EAAkB3L,KAAI,SAACgJ,GAAD,OAAgBA,EAAM/D,MACpEpL,EAAMgR,MAAN,iBAAsBlD,EAAMjD,MAAM4D,OAAOtD,QAAzC,KAAqD,CAAC,UAAa6G,MA4KnE,SAAwClC,S,oBCtS/BjJ,gBAvEC,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,QAAmC,EACdlB,mBAAS,IADK,oBAC7CqM,EAD6C,KAChCC,EADgC,OAElBtM,mBAAS,GAFS,oBAE7CuM,EAF6C,KAElCC,EAFkC,OAG5BxM,mBAAS,GAHmB,oBAG7C8E,EAH6C,KAGvCC,EAHuC,KAKpD5E,qBAAU,WACR/F,EACGgG,IAAI,YACJ1E,MAAK,SAACZ,GACL0R,EAAa1R,EAASgB,KAAKgK,OAC3BwG,EAAexR,EAASgB,KAAKuE,YAE9BrE,OAAM,SAACC,GACNf,QAAQC,IAAIc,QAEf,IAqBH,OACE,cAAC,GAAD,UACE,sBAAK0B,UAAWC,KAAO6O,QAAvB,UACE,yCACA,qBAAK9O,UAAWC,KAAO8O,cAAvB,SACE,cAAC,GAAD,CAAOhI,OAAQ,CAAC,KAAM,QAAtB,SACG2H,EAAY/L,OAAS,EACpB+L,EAAY9L,KAAI,SAACoM,GAAD,OACd,qBAAoBpO,QAAS,kBAZhBqO,GAYyCD,EAAOnH,QAXzEtE,EAAQ/C,KAAR,mBAAyByO,IADD,IAACA,GAYb,UACE,6BAAKD,EAAOnH,KACZ,6BAAKmH,EAAOE,SAFLF,EAAOnH,OAMlB,cAAC,GAAD,QAIN,qBAAK7H,UAAWC,KAAOiI,WAAvB,SACE,cAACA,GAAA,EAAD,CACEC,MAAOC,KAAKC,KAAKuG,EAAY,IAC7BtG,MAAM,UACNC,KAAK,QACLpB,KAAMA,EACNqB,SA3Ce,SACvBC,EACAxD,GAEAxI,EACGgG,IADH,wBACwBwC,IACrBlH,MAAK,SAACZ,GACLwR,EAAexR,EAASgB,KAAKuE,SAC7B0E,EAAQnC,MAET5G,OAAM,SAACC,GACNf,QAAQC,IAAIc,WAmCZ,qBAAK0B,UAAWC,KAAOkP,gBAAvB,SACE,cAAC,EAAD,CAAQvT,KAAK,SAAb,sC,6BCiIKiF,GAxLGC,aARM,SAACpF,GAAD,MAAsB,CAC5CH,KAAMG,EAAMQ,KAAKX,SAGQ,SAAC0C,GAAD,MAAoB,CAC7CmR,eAAgB,SAACrT,GAAD,OAAmBkC,EnB0CP,SAAClC,GAC7B,IAAMsT,EAAiBxQ,KAAKyQ,MAAM1R,aAAaC,QAAQ,aAAe,IAChE0R,EAAe,2BAAQF,GAAatT,GAE1C,OADA6B,aAAae,QAAQ,WAAYE,KAAKC,UAAUyQ,IACzC,CACL3T,KAAMZ,EACNe,SAAUA,GmBhDgCqT,CAAerT,QA2L9C8E,EArLE,SAAC,GAA8C,IAA5CtF,EAA2C,EAA3CA,KAAM6T,EAAqC,EAArCA,eAAqC,EACR5L,aAAQ,IAArDC,EADqD,EACrDA,SAAUC,EAD2C,EAC3CA,OAAQC,EADmC,EACnCA,aAAc6L,EADqB,EACrBA,SAExChN,qBAAU,WACRgN,EAAS,WAAYjU,EAAKmE,UAC1B8P,EAAS,YAAajU,EAAKiE,YAC3BgQ,EAAS,WAAYjU,EAAKkE,aACzB,CAAClE,EAAMiU,IAEV,IAAMxL,EAAQ,yCAAG,WAAO7F,EAAWsR,GAAlB,kBAAAxL,EAAA,sDACTyL,EADS,uCAETvR,EAAKuB,WAAanE,EAAKmE,UAAY,CAAEA,SAAUvB,EAAKuB,WACpDvB,EAAKwR,YAAcpU,EAAKiE,YAAc,CAAEA,WAAYrB,EAAKwR,YACzDxR,EAAKyR,WAAarU,EAAKkE,WAAa,CAAEA,UAAWtB,EAAKyR,WAExDzR,EAAK0R,OAAOlN,OAAS,KACjBmN,EAAW,IAAIC,UACZC,OAAO,SAAU7R,EAAK0R,OAAO,IACtCpT,EACGgR,MADH,yBAC2BlS,EAAK8D,GADhC,KACuCyQ,GACpC/R,MAAK,WACJ6H,QAAkBC,gBAAgB,CAChCC,MAAO,cACPZ,QAAS,yBACTtJ,KAAM,UACNmK,OAAQ,MACRC,UAAW,aACXC,YAAa,CAAC,oBAAqB,qBACnCC,aAAc,CAAC,oBAAqB,oBACpCC,QAAS,CACPC,SAAU,UAIf/H,OAAM,SAACC,GACNf,QAAQC,IAAIc,OAGd2R,OAAOC,KAAKR,GAAa/M,OAAS,GAEpClG,EACGgR,MADH,cACwBiC,GACrB3R,MAAK,WACJqR,EAAeM,GACf9J,QAAkBC,gBAAgB,CAChCC,MAAO,cACPZ,QAAS,2BACTtJ,KAAM,UACNmK,OAAQ,MACRC,UAAW,aACXC,YAAa,CAAC,oBAAqB,qBACnCC,aAAc,CAAC,oBAAqB,oBACpCC,QAAS,CACPC,SAAU,UAIf/H,OAAM,SAACC,GACNf,QAAQC,IAAIc,MAjDH,2CAAH,wDAsDd,OACE,cAAC,GAAD,UACE,sBAAK0B,UAAWC,KAAOkQ,SAAvB,UACE,0CACA,uBACEnQ,UAAWC,KAAOmQ,eAClBpM,SAAUL,EAAaK,GACvBS,YAAU,EAHZ,UAME,sBAAKzE,UAAWC,KAAOoQ,sBAAvB,UACE,uBACEhR,GAAG,WACHsF,KAAK,WACL/I,KAAK,OACLgJ,YAAY,WACZC,aAAa,WACbC,IAAKrB,EAAS,CACZsB,SAAU,mBACVC,UAAW,CACTC,MAAO,EACPC,QAAS,4BAIf,uBAAOC,QAAQ,WAAf,sBACA,qBACEnF,UACEC,KAAOqQ,uBACP,KACC5M,EAAM,UAAgBzD,KAAOsQ,6BAJlC,SAOG7M,EAAM,UAAgBA,EAAM,SAAawB,aAI9C,sBAAKlF,UAAWC,KAAOoQ,sBAAvB,UACE,uBACEhR,GAAG,YACHsF,KAAK,YACL/I,KAAK,OACLgJ,YAAY,aACZC,aAAa,aACbC,IAAKrB,EAAS,CACZ+M,UAAW,CACTvL,MAAO,IACPC,QAAS,8BAIf,uBAAOC,QAAQ,YAAf,wBACA,qBACEnF,UACEC,KAAOqQ,uBACP,KACC5M,EAAM,WAAiBzD,KAAOsQ,6BAJnC,SAOG7M,EAAM,WAAiBA,EAAM,UAAcwB,aAIhD,sBAAKlF,UAAWC,KAAOoQ,sBAAvB,UACE,uBACEhR,GAAG,WACHsF,KAAK,WACL/I,KAAK,OACLgJ,YAAY,YACZC,aAAa,cACbC,IAAKrB,EAAS,CACZ+M,UAAW,CACTvL,MAAO,IACPC,QAAS,8BAIf,uBAAOC,QAAQ,WAAf,uBACA,qBACEnF,UACEC,KAAOqQ,uBACP,KACC5M,EAAM,UAAgBzD,KAAOsQ,6BAJlC,SAOG7M,EAAM,UAAgBA,EAAM,SAAawB,aAI9C,sBAAKlF,UAAWC,KAAOoQ,sBAAvB,UACE,uBACEhR,GAAG,SACHsF,KAAK,SACL/I,KAAK,OACLgJ,YAAY,GACZC,aAAa,SACbC,IAAKrB,IAEP,uBAAO0B,QAAQ,SAAf,oBACA,qBACEnF,UACEC,KAAOqQ,uBACP,KACC5M,EAAM,QAAczD,KAAOsQ,6BAJhC,SAOG7M,EAAM,QAAcA,EAAM,OAAWwB,aAG1C,qBAAKlF,UAAWC,KAAOwQ,iBAAvB,SACE,cAAC,EAAD,CAAQ7U,KAAK,SAAS0E,UAAQ,EAA9B,+B,uCCxGGqI,GAvEG,SAAC,GAAwC,IAAtC+H,EAAqC,EAArCA,eAAqC,EAEhBrO,mBAA6B,IAFb,oBAEjDwJ,EAFiD,KAEnC8E,EAFmC,OAGhCtO,mBAAS,GAHuB,oBAGjD8E,EAHiD,KAG3CC,EAH2C,KAKxD5E,qBAAU,WACR/F,EACGgG,IAAI,cACJ1E,MAAK,YAAe,IAAZI,EAAW,EAAXA,KACPZ,QAAQC,IAAIW,EAAKuE,SACjBiO,EAAgBxS,MAEjBE,OAAM,SAACC,GACNf,QAAQC,IAAIc,QAEf,IAEH,IAeIsS,EAAmB,KAYvB,OAXgB,OAAZ/E,QAAY,IAAZA,OAAA,EAAAA,EAAcnJ,UAAWmJ,EAAanJ,QAAQC,OAAS,IACzDiO,EAAmB/E,EAAanJ,QAC7BmO,OAAOH,GACP9N,KAAI,SAACkO,GAAD,OACH,+BACE,6BAAKA,EAAWjJ,KAChB,6BAAKiJ,EAAWvD,SAFTuD,EAAWjJ,QAQxB,cAAC,GAAD,UACE,sBAAK7H,UAAWC,KAAO0I,UAAvB,UACE,2CACA,qBAAK3I,UAAWC,KAAO8Q,gBAAvB,UACe,OAAZlF,QAAY,IAAZA,OAAA,EAAAA,EAAc1D,OACb,qCACE,cAAC,GAAD,CAAOpB,OAlDI,CAAC,KAAM,YAkDlB,SAAgC6J,IAChC,qBAAK5Q,UAAWC,KAAOiI,WAAvB,SACE,cAACA,GAAA,EAAD,CACEC,MAAOC,KAAKC,KAAKwD,EAAa1D,MAAQ,IACtCG,MAAM,UACNC,KAAK,QACLpB,KAAMA,EACNqB,SAzCS,SACvBC,EACAxD,GAEAxI,EACGgG,IADH,0BAC0BwC,IACvBlH,MAAK,SAACZ,GACLwT,EAAgBxT,EAASgB,MACzBiJ,EAAQnC,MAET5G,OAAM,SAACC,GACNf,QAAQC,IAAIc,cAmCR,cAAC,GAAD,YC8KG0S,GAvPK,WAAO,IAAD,EACoB3O,mBAAmB,IADvC,oBACjB4O,EADiB,KACDC,EADC,OAEgB7O,mBAAyB,IAFzC,oBAEjBiM,EAFiB,KAEH6C,EAFG,OAGmB3N,aAAQ,IAA3CC,EAHgB,EAGhBA,SAAUC,EAHM,EAGNA,OAAQC,EAHF,EAGEA,aACpBK,EAAQ,yCAAG,WAAO7F,EAAWsR,GAAlB,wBAAAxL,EAAA,sDAGf,IAAWmN,KAFLC,EAAa,GAEDlT,EACZiT,EAAIpD,SAAS,YACTsD,GAAiBF,EAAIG,MAAM,KAAK,GAChCC,EAAYrT,EAAKsT,eAAezD,SAApB,UAAgCsD,IAClDD,EAAW7Q,KAAK,CACd,KAAQrC,EAAKiT,GACb,cAAiBI,KAKjBE,EAAc,CAClBnE,KAAMpP,EAAKwT,SACXC,QAASP,GAGX5U,EACGqB,KAAK,aAAc4T,GACnB3T,MAAK,YAAa,IACX8T,EAAiC,CACrChK,GAFc,EAAV1J,KAEK0J,GACT0F,KAAMmE,EAAYnE,MAEduE,EAAoB,aAAOxD,GACjCwD,EAAqBtR,KAAKqR,GAC1BV,EAAgBW,GAEhBlM,QAAkBC,gBAAgB,CAChCC,MAAO,cACPZ,QAAS,2BACTtJ,KAAM,UACNmK,OAAQ,MACRC,UAAW,aACXC,YAAa,CAAC,oBAAqB,qBACnCC,aAAc,CAAC,oBAAqB,oBACpCC,QAAS,CACPC,SAAU,OAGdqJ,EAAEsC,OAAOC,WACR3T,OAAM,SAAAC,GACPf,QAAQC,IAAIc,MA5CD,2CAAH,wDA4DV2T,EAAoB,KAgDxB,OA/CIhB,EAAetO,OAAS,IAC1BsP,EAAoBhB,EAAerO,KAAI,SAACsP,GACtC,IAAMZ,EAAQY,EAAW,EACnBC,EAAS,iBAAab,GAE5B,OACE,sBACEtR,UAAWC,KAAOmS,0BADpB,UAIE,uBACE/S,GAAI8S,EACJxN,KAAMwN,EACNvW,KAAK,OACLgJ,YAAW,iBAAY0M,GACvBxM,IAAKrB,EAAS,CACZsB,SAAU,uBAGd,uBACEI,QAASgN,EACTnS,UAAWC,KAAOoS,iCAFpB,0BAGYf,KACZ,qBACEtR,UACEC,KAAOqS,0BACP,KACC5O,EAAOyO,IAAclS,KAAOsS,gCAJjC,SAOG7O,EAAOyO,IAAczO,EAAOyO,GAAWjN,UAE1C,sBAAKlF,UAAWC,KAAOuS,iCAAvB,UACE,uBACE5W,KAAK,WACLyD,GAAE,wBAAmBiS,GACrB3M,KAAK,iBACLM,MAAOqM,EACPxM,IAAKrB,MAEP,uBAAO0B,QAAO,wBAAmBmM,UAlCrC,gBAEgBA,QAwCpB,sBAAKtR,UAAWC,KAAO0N,OAAvB,UACE,cAAC,GAAD,UACE,sBAAK3N,UAAWC,KAAO+Q,YAAvB,UACE,8CACA,uBACEhR,UAAWC,KAAOwS,kBAClBzO,SAAUL,EAAaK,GACvBS,YAAU,EAHZ,UAKE,sBAAKzE,UAAWC,KAAOyS,yBAAvB,UACE,uBACErT,GAAG,WACHsF,KAAK,WACL/I,KAAK,OACLgJ,YAAY,WACZC,aAAa,WACbC,IAAKrB,EAAS,CACZsB,SAAU,uBAGd,uBAAOI,QAAQ,WAAf,sBACA,qBACEnF,UACEC,KAAOqS,0BACP,KACC5O,EAAM,UAAgBzD,KAAOsS,gCAJlC,SAOG7O,EAAM,UAAgBA,EAAM,SAAawB,aAG9C,sBAAKlF,UAAWC,KAAO0S,0BAAvB,UACE,0CACA,8CAEF,sBAAK3S,UAAWC,KAAOmS,0BAAvB,UACE,uBACE/S,GAAG,WACHsF,KAAK,WACL/I,KAAK,OACLgJ,YAAY,WACZE,IAAKrB,EAAS,CACZsB,SAAU,uBAGd,uBACEI,QAAQ,WACRnF,UAAWC,KAAOoS,iCAFpB,sBAMA,qBACErS,UACEC,KAAOqS,0BACP,KACC5O,EAAO,aAAezD,KAAOsS,gCAJlC,SAOG7O,EAAO,aAAeA,EAAO,YAAYwB,UAE5C,sBAAKlF,UAAWC,KAAOuS,iCAAvB,UACE,uBACE5W,KAAK,WACLyD,GAAG,kBACHsF,KAAK,iBACLM,MAAM,IACN2N,gBAAc,EACd9N,IAAKrB,MAEP,uBAAO0B,QAAQ,0BAGnB,sBAAKnF,UAAWC,KAAOmS,0BAAvB,UACE,uBACE/S,GAAG,WACHsF,KAAK,WACL/I,KAAK,OACLgJ,YAAY,WACZE,IAAKrB,EAAS,CACZsB,SAAU,uBAGd,uBACEI,QAAQ,WACRnF,UAAWC,KAAOoS,iCAFpB,sBAMA,qBACErS,UACEC,KAAOqS,0BACP,KACC5O,EAAO,aAAezD,KAAOsS,gCAJlC,SAOG7O,EAAO,aAAeA,EAAO,YAAYwB,UAE5C,sBAAKlF,UAAWC,KAAOuS,iCAAvB,UACE,uBACE5W,KAAK,WACLyD,GAAG,kBACHsF,KAAK,iBACLM,MAAM,IACNH,IAAKrB,MAEP,uBAAO0B,QAAQ,0BAGlB8M,EACD,sBAAKjS,UAAWC,KAAO4S,qBAAvB,UACE,qBAAK7S,UAAWC,KAAO6S,6BAAvB,SACE,cAAC,EAAD,CAAQlX,KAAK,SAASyE,cA5KZ,WACtB,IAAMgR,EAAoB,aAAOJ,GACjCI,EAAW7Q,KAAKyQ,EAAetO,OAAS,GACxCuO,EAAkBG,IAyKN,8BAIF,qBAAKrR,UAAWC,KAAO6S,6BAAvB,SACE,cAAC,EAAD,CAAQlX,KAAK,SAASyE,cA3KT,WACzB,IAAMgR,EAAoB,aAAOJ,GACjCI,EAAW0B,MACX7B,EAAkBG,IAwKN,gCAKJ,qBAAKrR,UAAWC,KAAO+S,oBAAvB,SACE,cAAC,EAAD,CAAQpX,KAAK,SAAS0E,UAAQ,EAA9B,oCAOR,cAAC,GAAD,CAAWoQ,eAAgBpC,Q,oBCrIlBzN,GAzGGC,aAJM,SAACpF,GAAD,MAAsB,CAC5CsL,OAAQtL,EAAMQ,KAAKX,KAAK8D,MA4GXwB,EAtGC,SAAC,GAAgC,IAA9BmG,EAA6B,EAA7BA,OAA6B,EACR3E,mBAAc,IADN,oBACvC4Q,EADuC,KAC1BC,EAD0B,KAG9C1Q,qBAAU,WACJwE,GACFvK,EACGgG,IADH,4BAC4BuE,IACzBjJ,MAAK,YAAe,IAAZI,EAAW,EAAXA,KACPZ,QAAQC,IAAIW,GACZ+U,EAAe/U,MAEhBE,OAAM,SAACC,GACNf,QAAQC,IAAIc,QAGjB,CAAC0I,IAEJ,IAAMmM,EAAgB,SACpBC,EACAC,GAEA5W,EACGgR,MADH,0BAC4B2F,EAD5B,KAC0C,CAAErL,OAAQsL,IACjDtV,MAAK,WACJ,IAAIuV,EAAc,aAAOL,EAAYvQ,SACjC6Q,EAAmBD,EAAeE,WAAU,SAACC,GAAD,OAAmBA,EAAS5L,KAAOuL,KACnF,OAAQC,GACN,IAAK,WACHC,EAAeC,GAAkBxL,OAASsL,EAC1C,MACF,IAAK,WACL,IAAK,UACHC,EAAeI,OAAOH,EAAkB,GAG5CL,EAAe,2BAAID,GAAL,IAAkBvQ,QAAS4Q,QAE1CjV,OAAM,SAACC,GACNf,QAAQC,IAAIc,OAIdqV,EAA0B,cAAC,GAAD,IAkD9B,MAjDI,YAAaV,IACfU,EAAqB,gBAEjBV,EAAYvQ,QAAQC,OAAS,IAC/BgR,EACE,cAAC,GAAD,CAAO5M,OAAQ,CAAC,SAAU,WAAY,SAAU,WAAhD,SACGkM,EAAYvQ,QAAQE,KAAI,SAACgR,GAAD,OACvB,+BACE,6BAAKA,EAAM5M,SACX,6BAAK4M,EAAMC,WACX,6BAAKD,EAAM7L,SACX,oBAAI/H,UAAWC,KAAO6T,iBAAtB,SACoB,aAAjBF,EAAM7L,OACL,qBAAK/H,UAAWC,KAAO8T,gBAAvB,SACE,cAAC,EAAD,CACEnY,KAAK,SACLyE,cAAe,kBAAM8S,EAAcS,EAAM/L,GAAI,YAF/C,sBAOiB,SAAjB+L,EAAM7L,QAAqB6L,EAAMC,WAAa7M,EAChD,qCACE,qBAAKhH,UAAWC,KAAO8T,gBAAvB,SACE,cAAC,EAAD,CACEnY,KAAK,SACLyE,cAAe,kBAAM8S,EAAcS,EAAM/L,GAAI,aAF/C,sBAOF,qBAAK7H,UAAWC,KAAO8T,gBAAvB,SACE,cAAC,EAAD,CACEnY,KAAK,SACLyE,cAAe,kBAAM8S,EAAcS,EAAM/L,GAAI,aAF/C,yBAQF,SAjCC+L,EAAM/L,WA2CvB,cAAC,GAAD,UACE,sBAAK7H,UAAWC,KAAO+T,QAAvB,UACE,yCACA,qBAAKhU,UAAWC,KAAOgU,cAAvB,SAAuCN,Y,oBC7BhCO,GAnEM,SAAC3J,GAAoD,IAAD,EACnClI,mBAAc,IADqB,oBAChE8R,EADgE,KACpDC,EADoD,KAGvE5R,qBAAU,WACR/F,EACGgG,IADH,kBACkB8H,EAAMjD,MAAM4D,OAAO+D,SADrC,MAEGlR,MAAK,YAAe,IAAZI,EAAW,EAAXA,KACPiW,EAAcjW,MAEfE,OAAM,SAACC,GACNf,QAAQC,IAAIc,QAEf,IAEH,IAkBI+V,EAA6B,cAAC,GAAD,IAkBjC,MAjBI,mBAAoBF,IACtBE,EAAwB,iBAEpBF,EAAWG,eAAe3R,OAAS,IACrC0R,EACE,cAAC,GAAD,CAAOtN,OAAQ,CAAC,KAAM,QAAtB,SACGoN,EAAWG,eAAe1R,KAAI,SAAC2R,GAAD,OAC7B,qBAAkB3T,QAAS,kBAZN4T,EAYkCD,EAAK1M,QAXpE0C,EAAMhH,QAAQ/C,KAAd,sBAAkCgU,IADN,IAACA,GAYrB,UACE,6BAAKD,EAAK1M,KACV,6BAAK0M,EAAKrF,SAFHqF,EAAK1M,WAWtB,cAAC,GAAD,UACE,sBAAK7H,UAAWC,KAAOiU,aAAvB,UACE,4CAAe3J,EAAMjD,MAAM4D,OAAO+D,YAClC,oCAAKkF,QAAL,IAAKA,OAAL,EAAKA,EAAYjF,OACjB,sBAAKlP,UAAWC,KAAOwU,0BAAvB,UACE,6CACCJ,KAEH,qBAAKrU,UAAWC,KAAOyU,qBAAvB,SACE,cAAC,EAAD,CAAQ9Y,KAAK,SAASyE,cA9CC,WAC7B5D,EACGqB,KAAK,eAAgB,CACpB6W,SAAUpK,EAAMjD,MAAM4D,OAAO+D,SAC7BC,KAAM,mBAEPnR,MAAK,YAAa,IAAXI,EAAU,EAAVA,KACNoM,EAAMhH,QAAQ/C,KAAd,sBAAkCrC,EAAK0J,QAExCxJ,OAAM,SAACC,GACNf,QAAQC,IAAIc,OAoCV,oC,oBCxDKsW,GAXI,SAACrK,GAClB,OACE,cAAC,GAAD,UACE,sBAAKvK,UAAWC,KAAO2U,WAAvB,UACE,gDAAmBrK,EAAMjD,MAAM4D,OAAOsJ,gBACtC,qBAAKxU,UAAWC,KAAO2U,mB,oBCyFhBtR,IAlFGxC,aAJM,SAACpF,GAAD,MAAsB,CAC5CsL,OAAQtL,EAAMQ,KAAKX,KAAK8D,OAqFXiE,aA7EF,SAACiH,GAA8B,IAAD,MACnC3C,EAAU2C,EAAMjD,MAAM4D,OAAOtD,QAC3BZ,EAAoBuD,EAApBvD,OAAQzD,EAAYgH,EAAZhH,QAFyB,EAGTlB,mBAAwB,IAHf,oBAGlCwS,EAHkC,KAGxBC,EAHwB,KAKzCtS,qBAAU,WACRuS,MACC,IAEH,IAuCkD,EAvC5CA,EAAkB,WACtBtY,EACGgG,IADH,kCACkCmF,EADlC,MAEG7J,MAAK,YAAe,IAAZI,EAAW,EAAXA,KACPZ,QAAQC,IAAIW,GACZ2W,EAAY3W,MAEbE,OAAM,SAACC,GAAS,IAAD,KACd,OACEA,QADF,IACEA,GADF,UACEA,EAAKnB,gBADP,iBACE,EAAegB,YADjB,aACE,EAAqB6W,iBAAiB/I,MACpC,SAACgJ,GAAD,MAA+B,qCAAXA,OAGtB1R,EAAQ/C,KAAR,mBAAyBoH,EAAzB,MAGFrK,QAAQC,IAAIc,OAsBd4W,EAAmB,cAAC,GAAD,KACX,OAARL,QAAQ,IAARA,OAAA,EAAAA,EAAUhN,MAAV,UAAgBgN,EAASM,kBAAzB,aAAgB,EAAqBvD,SACvCsD,EAAW,UAAGL,EAASM,kBAAZ,aAAG,EAAqBvD,QAAQhP,KACzC,SAACwS,GAAD,OACE,qBAEEpV,UAAWC,KAAOoV,sBAClBzU,QAAS,kBAzBY,SAACsR,GAC5B,IAAMoD,EAAY,CAChBC,gBAAiBV,EAAShN,GAC1B2N,SAAU,CAACtD,GACXlL,OAAQA,GAGVvK,EACGqB,KAAK,0BAA2BwX,GAChCvX,MAAK,YAAe,IAAZI,EAAW,EAAXA,KACPZ,QAAQC,IAAIW,GACZ4W,OAED1W,OAAM,SAACC,GACNf,QAAQC,IAAIc,MAWKmX,CAAqBL,EAAQvN,KAH9C,SAKGuN,EAAQ7H,MAJJ6H,EAAQvN,OAQoB,MAAvB,OAARgN,QAAQ,IAARA,GAAA,UAAAA,EAAUM,kBAAV,eAAsB5H,QAC9B2H,EAAc,qBAAKlV,UAAWC,KAAOyV,cAAvB,2CAGhB,OACE,cAAC,GAAD,UACE,sBAAK1V,UAAWC,KAAO0V,KAAvB,UACE,0CAAa/N,KACb,sBAAK5H,UAAWC,KAAO2V,eAAvB,UACE,uCAAKf,EAASM,kBAAd,aAAK,EAAqB5H,OAC1B,qBAAKvN,UAAWC,KAAO4V,cAAvB,SAAuCX,gBC3EjD,SAASY,GAAU7V,GACjB,MAAO,CACL8V,QAAS9V,EAAO8V,QAChBC,UAAU,SAAD,OAAW/V,EAAOgW,MAAlB,MAIb,SAASC,GAAOC,GACd,OAAOC,YAAOD,EAAK,CACjBE,UAAW,IACXC,QAAS,KAIb,IAAMC,GAAmB,CACvBC,QAAS,CACPT,QAAS,EACTE,MAAO,KAETQ,QAAS,CACPV,QAASG,GAAO,GAChBD,MAAOC,GAAO,KAEhBQ,SAAU,CACRX,QAASG,GAAO,GAChBD,MAAOC,GAAO,KAiDHrV,GAFGC,YAAQ,MANC,SAAC7C,GAC1B,MAAO,CACL0Y,YAAa,kBAAM1Y,G1BgBuB,SAACA,GAAc,IAAD,IAKtD1C,EAJEH,EAAQwC,aAAaC,QAAQ,SAC7BxC,EAAY,UAAGuC,aAAaC,QAAQ,uBAAxB,QAA2C,GACvDvC,EAAe,UAAGsC,aAAaC,QAAQ,0BAAxB,QAA8C,GAC7D+Y,EAAWhZ,aAAaC,QAAQ,YAMtC,GAJgB,OAAb+Y,IACDrb,EAAOsD,KAAKyQ,MAAMsH,IAGfxb,GAAUG,EAER,CACL,IAAMQ,EAAiB,CACrBsD,GAAI9D,EAAK8D,GACTE,MAAOhE,EAAKgE,MACZC,WAAYjE,EAAKiE,WACjBC,UAAWlE,EAAKkE,UAChBC,SAAUnE,EAAKmE,UAGjBzB,EAASS,EAAiB3C,EAAUX,EAAOC,GAAeC,SAV1D2C,EAASM,Y0BrBEsC,EA3CH,SAAC,GAAqC,IAAnC8V,EAAkC,EAAlCA,YAKb,OAJAnU,qBAAU,WACRmU,MACC,CAACA,IAGF,qCACE,cAAC,IAAD,IACA,cAAC,GAAD,UACE,eAAC,IAAD,CACEH,QAASD,GAAiBC,QAC1BC,QAASF,GAAiBE,QAC1BC,SAAUH,GAAiBG,SAC3BZ,UAAWA,GACX9V,UAAU,iBALZ,UAOE,cAAC,IAAD,CAAO6W,KAAK,YAAY5V,OAAK,EAAC6V,UAAWxS,KACzC,cAAC,IAAD,CAAOuS,KAAK,SAAS5V,OAAK,EAAC6V,UAAWzQ,KACtC,cAAC,IAAD,CAAOwQ,KAAK,UAAU5V,OAAK,EAAC6V,UAAWC,KACvC,cAAC,IAAD,CAAOF,KAAK,WAAW5V,OAAK,EAAC6V,UAAW9O,KACxC,cAAC,IAAD,CAAO6O,KAAK,oBAAoB5V,OAAK,EAAC6V,UAAWlN,KACjD,cAAC,IAAD,CAAOiN,KAAK,iBAAiB5V,OAAK,EAAC6V,UAAWnB,KAC9C,cAAC,IAAD,CAAOkB,KAAK,WAAW5V,OAAK,EAAC6V,UAAWhI,KACxC,cAAC,IAAD,CAAO+H,KAAK,qBAAqB5V,OAAK,EAAC6V,UAAW5C,KAClD,cAAC,IAAD,CAAO2C,KAAK,4BAA4B5V,OAAK,EAAC6V,UAAWlC,KACzD,cAAC,IAAD,CAAOiC,KAAK,YAAY5V,OAAK,EAAC6V,UAAW3G,KACzC,cAAC,IAAD,CAAO0G,KAAK,gBAAgB5V,OAAK,EAAC6V,UAAW9F,KAC7C,cAAC,IAAD,CAAO6F,KAAK,WAAW5V,OAAK,EAAC6V,UAAW9C,KACxC,cAAC,IAAD,CAAO6C,KAAK,IAAI5V,OAAK,EAAC6V,UAAW3U,gBCrE5B6U,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBnZ,MAAK,YAAkD,IAA/CoZ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCd1N,IAASiO,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUtb,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,UAIN6N,SAAS0N,eAAe,SAM1BV,M,mBCvBAvc,EAAOC,QAAU,CAAC,SAAW,2BAA2B,eAAiB,iCAAiC,sBAAwB,wCAAwC,uBAAyB,yCAAyC,4BAA8B,8CAA8C,iBAAmB,qC,mBCA3UD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,WAAa,yBAAyB,kBAAoB,gCAAgC,WAAa,yBAAyB,iBAAmB,+BAA+B,qBAAuB,mCAAmC,2BAA6B,2C,mBCArTD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,YAAc,iCAAiC,qBAAuB,0CAA0C,yBAA2B,8CAA8C,gBAAkB,qCAAqC,QAAU,6BAA6B,eAAiB,oCAAoC,mBAAqB,wCAAwC,gBAAkB,qCAAqC,eAAiB,sC,mBCAxgBD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,eAAiB,8BAA8B,YAAc,2BAA2B,mBAAqB,kCAAkC,oBAAsB,mCAAmC,yBAA2B,wCAAwC,cAAgB,6BAA6B,oBAAsB,qC,mBCA7XD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,oBAAsB,oCAAoC,4BAA8B,4CAA4C,eAAiB,iC,mBCAvMD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,cAAgB,gCAAgC,YAAc,8BAA8B,aAAe,+BAA+B,YAAc,8BAA8B,eAAiB,mC,mBCAvPD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,iBAAmB,kCAAkC,gBAAkB,mC,mBCA5HD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,eAAiB,6BAA6B,cAAgB,4BAA4B,sBAAwB,oCAAoC,cAAgB,8B,mBCAlND,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,gBAAkB,iCAAiC,WAAa,8B,mBCApKD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,gBAAkB,iCAAiC,WAAa,8B,mBCApKD,EAAOC,QAAU,CAAC,SAAW,yBAAyB,YAAc,4BAA4B,YAAc,8B,mBCA9GD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,gBAAkB,mCAAmC,WAAa,gC,mBCA7HD,EAAOC,QAAU,CAAC,aAAe,oCAAoC,qBAAuB,8C,mBCA5FD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,wBAAwB,WAAa,yBAAyB,cAAgB,8B,mBCAtID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAe,+B,mBCAjED,EAAOC,QAAU,CAAC,WAAa,iC,mBCA/BD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,mBCA1DD,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,YAAc,oC,kBCAhCD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,YAAc,iCAAiC,kBAAoB,uCAAuC,yBAA2B,8CAA8C,0BAA4B,+CAA+C,0BAA4B,+CAA+C,iCAAmC,sDAAsD,iCAAmC,sDAAsD,0BAA4B,+CAA+C,+BAAiC,oDAAoD,qBAAuB,0CAA0C,6BAA+B,kDAAkD,oBAAsB,2C","file":"static/js/main.24028d37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Register\":\"Register_Register__83fHQ\",\"Register__FormBox\":\"Register_Register__FormBox__3c9pd\",\"Register__Form\":\"Register_Register__Form__19beg\",\"Register__Form__Input\":\"Register_Register__Form__Input__2i-3E\",\"Register__ErrorMessage\":\"Register_Register__ErrorMessage__Ik6l7\",\"Register__ErrorMessage_show\":\"Register_Register__ErrorMessage_show__2nXho\",\"Register__Button\":\"Register_Register__Button__2xBCV\",\"Register__LoginInfo\":\"Register_Register__LoginInfo__3VwgF\"};","export interface AuthState {\n  loggedIn: boolean;\n  token: string;\n  refreshToken: string;\n  tokenExpiration: number;\n  user: User;\n  loading: boolean;\n  error: Error | null;\n}\n\nexport interface User {\n  id?: number;\n  username?: string;\n  email?: string;\n  first_name?: string;\n  last_name?: string;\n} \n\nexport interface AuthData {\n  email: string;\n  password: string;\n}\n\nexport const AUTH_LOGIN_START = \"AUTH_LOGIN_START\";\nexport const AUTH_LOGIN_SUCCESS = \"AUTH_LOGIN_SUCCESS\";\nexport const AUTH_LOGIN_FAIL = \"AUTH_LOGIN_FAIL\";\n\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\nexport const AUTH_NEW_TOKEN = \"AUTH_NEW_TOKEN\";\nexport const AUTH_NEW_USER_DATA = \"AUTH_NEW_USER_DATA\";\n\ninterface LoginStartAction {\n  type: typeof AUTH_LOGIN_START;\n}\n\ninterface LoginSuccessAction {\n  type: typeof AUTH_LOGIN_SUCCESS;\n  user: User;\n  token: string;\n  refreshToken: string;\n  tokenExpiration: number;\n}\n\ninterface LoginFailAction {\n  type: typeof AUTH_LOGIN_FAIL;\n  error: Error;\n}\n\ninterface LogoutAction {\n  type: typeof AUTH_LOGOUT;\n}\n\ninterface NewTokenAction {\n  type: typeof AUTH_NEW_TOKEN;\n  newToken: string;\n  newTokenExpiration: number;\n}\n\ninterface NewUserData {\n  type: typeof AUTH_NEW_USER_DATA;\n  userData: User;\n}\n\nexport type AuthActionTypes = \n  LoginStartAction | LoginSuccessAction | LoginFailAction | LogoutAction | NewTokenAction | NewUserData;\n","import {\n  AuthState,\n  AuthActionTypes,\n  AUTH_LOGIN_START,\n  AUTH_LOGIN_SUCCESS,\n  AUTH_LOGIN_FAIL,\n  AUTH_LOGOUT,\n  AUTH_NEW_TOKEN,\n  AUTH_NEW_USER_DATA\n} from './types';\n\nconst initialState: AuthState = {\n  loggedIn: false,\n  loading: false,\n  token: '',\n  refreshToken: '',\n  tokenExpiration: 0,\n  user: {},\n  error: null\n};\n\nconst authReducer = (state = initialState, action: AuthActionTypes): AuthState => {\n  switch (action.type) {\n    case AUTH_LOGIN_START:\n      return { ...state, loading: true, error: null };\n    case AUTH_LOGIN_SUCCESS:\n      return { ...state, token: action.token, refreshToken: action.refreshToken, tokenExpiration: action.tokenExpiration, loggedIn: true, user: action.user, loading: false };\n    case AUTH_LOGIN_FAIL:\n      return { ...state, loading: false, error: action.error};\n    case AUTH_LOGOUT:\n      return { ...state, loggedIn: false, loading: false, token: '', user: {}, error: null };\n    case AUTH_NEW_TOKEN:\n      return { ...state, token: action.newToken, tokenExpiration: action.newTokenExpiration };\n    case AUTH_NEW_USER_DATA:\n      return { ...state, user: {...state.user, ...action.userData} }\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { AuthState } from './auth/types';\n\nimport authReducer from \"./auth/reducers\";\n\nexport interface AppState {\n  auth: AuthState\n}\n\nconst rootReducer = combineReducers({\n  auth: authReducer\n});\n\nconst store = createStore(rootReducer, \n  composeWithDevTools(\n  applyMiddleware(thunk)\n)\n);\n\nexport default store;","import axios from 'axios';\n\nimport store from '../store/store';\nimport { authRefreshToken, authLogout } from '../store/auth/actions';\n\nconst quiz = axios.create({\n  baseURL: 'http://ec2-3-82-54-117.compute-1.amazonaws.com/api/v1/',\n});\n\nquiz.interceptors.request.use((req) => {\n  const state = store.getState();\n  if (state.auth.token) {\n    req.headers = {\n      ...req.headers,\n      Authorization: `Bearer ${state.auth.token}`,\n    };\n  }\n\n  return req;\n});\n\nquiz.interceptors.response.use(undefined, (error) => {\n  const originalRequest = error.config;\n  console.log(originalRequest)\n  if ((error.response.status === 401 && !originalRequest._retry) && !(originalRequest.url === \"/auth/token/refresh/\" && error.response.status === 401)) {\n    originalRequest._retry = true;\n\n    const refreshToken = localStorage.getItem(\"refreshToken\");\n    return quiz\n      .post('/auth/token/refresh/', {\n        \"refresh\": refreshToken\n      })\n      .then((res) => {\n        store.dispatch(authRefreshToken(res.data.access));\n        originalRequest.headers['Authorization'] = 'Bearer ' + res.data.access;\n        return axios(originalRequest);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  } else if(error.response.status === 401 && !originalRequest._retry) {\n    store.dispatch(authLogout());\n  }\n\n  return Promise.reject(error);\n});\n\nexport default quiz;\n","import jwt_decode from 'jwt-decode';\n\nimport axios from \"../../api/quiz\";\nimport AppThunk from \"../AppThunk\";\nimport {\n  AuthData,\n  AUTH_LOGIN_START,\n  AUTH_LOGIN_SUCCESS,\n  AUTH_LOGIN_FAIL,\n  AUTH_LOGOUT,\n  AUTH_NEW_TOKEN,\n  AUTH_NEW_USER_DATA,\n  AuthActionTypes,\n  User,\n} from \"./types\";\n\nexport const authLoginStart = (): AuthActionTypes => {\n  return {\n    type: AUTH_LOGIN_START,\n  };\n};\n\nexport const authLoginSuccess = (\n  userData: User,\n  token: string,\n  refreshToken: string,\n  tokenExpiration: number\n): AuthActionTypes => {\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\"refreshToken\", refreshToken);\n  localStorage.setItem(\"tokenExpiration\", tokenExpiration.toString());\n  localStorage.setItem(\"userData\", JSON.stringify(userData));\n\n  return {\n    type: AUTH_LOGIN_SUCCESS,\n    user: userData,\n    token: token,\n    refreshToken: refreshToken,\n    tokenExpiration: tokenExpiration\n  };\n};\n\nexport const authLoginFail = (err: Error): AuthActionTypes => {\n  return {\n    type: AUTH_LOGIN_FAIL,\n    error: err,\n  };\n};\n\nexport const authRefreshToken = (newToken: string): AuthActionTypes => {\n  localStorage.setItem(\"token\", newToken);\n  const decodedToken: {exp: number} = jwt_decode(newToken);\n  localStorage.setItem(\"tokenExpiration\", decodedToken.exp.toString());\n  return {\n    type: AUTH_NEW_TOKEN,\n    newToken: newToken,\n    newTokenExpiration: decodedToken.exp\n  }\n}\n\nexport const updateUserData = (userData: User): AuthActionTypes => {\n  const userInfo: User = JSON.parse(localStorage.getItem('userData') || '');\n  const updatedUserInfo = { ...userInfo, ...userData };\n  localStorage.setItem('userData', JSON.stringify(updatedUserInfo));\n  return {\n    type: AUTH_NEW_USER_DATA,\n    userData: userData\n  }\n}\n\nexport const authLogin = (authData: AuthData): AppThunk => (dispatch) => {\n  dispatch(authLoginStart());\n  \n  axios\n    .post(\"/auth/login/\", authData)\n    .then(({ data }) => {\n      const decodedToken: {exp: number} = jwt_decode(data.access_token);\n\n      dispatch(\n        authLoginSuccess(\n          {\n            id: data.user.pk,\n            email: data.user.email,\n            first_name: data.user.first_name,\n            last_name: data.user.last_name,\n            username: data.user.username,\n          },\n          data.access_token,\n          data.refresh_token,\n          decodedToken.exp\n        )\n      );\n    })\n    .catch((err) => {\n      dispatch(authLoginFail(err));\n    });\n};\n\nexport const authLogout = (): AuthActionTypes => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('userData');\n  localStorage.removeItem('refreshToken');\n  localStorage.removeItem('tokenExpiration');\n  return {\n      type: AUTH_LOGOUT\n  };\n};\n\nexport const authCheckState = (): AppThunk => (dispatch) => {\n  const token = localStorage.getItem(\"token\");\n  const refreshToken = localStorage.getItem(\"refreshToken\") ?? '';\n  const tokenExpiration = localStorage.getItem(\"tokenExpiration\") ?? '';\n  const userJSON = localStorage.getItem(\"userData\");\n  let user;\n  if(userJSON !== null) {\n    user = JSON.parse(userJSON);\n  } \n  \n  if (!token || !user) {\n    dispatch(authLogout());\n  } else {\n    const userData: User = {\n      id: user.id,\n      email: user.email,\n      first_name: user.first_name,\n      last_name: user.last_name,\n      username: user.username,\n    };\n  \n    dispatch(authLoginSuccess(userData, token, refreshToken, +tokenExpiration));\n  }\n};","import { Link } from \"react-router-dom\";\n// import { FaRegLightbulb } from \"react-icons/fa\";\n\nimport styles from \"./Logo.module.scss\";\n\nconst Logo = () => {\n  return (\n    <Link to='/' className=\"CleanLink\">\n      <div className={styles.Logo}>\n        {/* <div className={styles.Logo__Img}>\n          <FaRegLightbulb size={52} />\n        </div> */}\n        <div className={styles.Logo__Text}>Quizwanie</div>\n      </div>\n    </Link>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\n\nimport styles from './Button.module.scss';\n\ntype ButtonProps = { \n  children: React.ReactNode,\n  type: 'transparent' | 'filled',\n  handleClicked?: () => void\n  isSubmit?: boolean;\n}\n\nconst Button = ({ children, handleClicked, type, isSubmit }: ButtonProps) => {\n  let buttonClasses = [styles.Button];\n  if(type === 'transparent') {\n    buttonClasses.push(styles.Button__Transparent);\n  } else if(type === 'filled') {\n    buttonClasses.push(styles.Button__Filled);\n  }\n\n  return (\n    <button className={buttonClasses.join(' ')} onClick={handleClicked} type={isSubmit ? 'submit': 'button'}>{children}</button>\n  )\n}\n\nexport default Button\n","import { NavLink, Link } from 'react-router-dom';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { AppState } from '../../store/store';\nimport Button from '../Button/Button';\nimport styles from './Menu.module.scss';\nimport buttonStyles from '../Button/Button.module.scss';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLogged: state.auth.loggedIn,\n  username: state.auth.user.username,\n});\n\nconst connector = connect(mapStateToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Menu = ({ isLogged, username }: PropsFromRedux) => {\n  return (\n    <div className={styles.Menu}>\n      {!isLogged ? (\n        <NavLink\n          to=\"/login\"\n          exact\n          activeClassName={buttonStyles.Button__Transparent_Visited}\n        >\n          <div className={styles.Menu__Item}>\n            <Button type=\"transparent\">Login</Button>\n          </div>\n        </NavLink>\n      ) : (\n        <>\n          <NavLink\n            to=\"/leagues\"\n            exact\n            activeClassName={buttonStyles.Button__Transparent_Visited}\n          >\n            <div className={styles.Menu__Item}>\n              <Button type=\"transparent\">Leagues</Button>\n            </div>\n          </NavLink>\n          <NavLink\n            to=\"/matches\"\n            exact\n            activeClassName={buttonStyles.Button__Transparent_Visited}\n          >\n            <div className={styles.Menu__Item}>\n              <Button type=\"transparent\">Matches</Button>\n            </div>\n          </NavLink>\n          <NavLink\n            to=\"/add-question\"\n            exact\n            activeClassName={buttonStyles.Button__Transparent_Visited}\n          >\n            <div className={styles.Menu__Item}>\n              <Button type=\"transparent\">Add Question</Button>\n            </div>\n          </NavLink>\n          <div className={styles.Menu__Item}>\n            <div className={styles.Menu__User}>\n              <div className={styles.Menu__User__Name}>{username}</div>\n              <div className={styles.Menu__User__Dropdown}>\n                <Link to=\"/friends\">\n                  <div className={styles.Menu__User__Dropdown__Item}>\n                    Friends\n                  </div>\n                </Link>\n                <Link to=\"/settings\">\n                  <div className={styles.Menu__User__Dropdown__Item}>\n                    Settings\n                  </div>\n                </Link>\n                <Link to=\"/logout\">\n                  <div className={styles.Menu__User__Dropdown__Item}>\n                    Logout\n                  </div>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default connector(Menu);\n","import Logo from '../Logo/Logo';\nimport Menu from '../Menu/Menu';\n\nimport styles from './Header.module.scss';\n\nconst Header = () => {\n  return (\n    <header className={styles.Header}>\n      <Logo />\n      <Menu />\n    </header>\n  );\n};\n\nexport default Header;","import styles from './Footer.module.scss';\n\nconst Footer = () => {\n  return (\n    <footer className={styles.Footer}>\n      <div className={styles.Footer__Text}>\n        Artur Witkowski @ 2020\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport styles from \"./Layout.module.scss\";\n\ntype LayoutProps = { children: React.ReactNode };\n\nconst Layout = ({ children }: LayoutProps) => {\n  return (\n    <div className={styles.FullPage}>\n      <div className={styles.CenteredBox}>\n        <Header />\n        <div className={styles.PageContent}>{children}</div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\n\nimport styles from \"./Panel.module.scss\";\n\ntype PanelProps = {\n  children: React.ReactNode\n}\n\nconst Panel = ({ children }: PanelProps) => {\n  return (\n    <div className={styles.Panel}>\n      {children}\n    </div>\n  );\n};\n\nexport default Panel;\n","import styles from \"./Loader.module.scss\";\n\nconst Loader = () => {\n  return <div className={styles.Loader}>Loading...</div>;\n};\n\nexport default Loader;\n","import { useEffect, useState } from \"react\";\nimport axios from \"../../api/quiz\";\nimport { Link } from \"react-router-dom\";\n\nimport Panel from \"../../components/Panel/Panel\";\nimport Button from \"../../components/Button/Button\";\nimport Loader from \"../../components/Loader/Loader\";\n\nimport styles from \"./MainPage.module.scss\";\n\nconst MainPage = () => {\n  type rankingType = {\n    rank: number;\n    total_points: number;\n    username: string;\n  };\n  const [ranking, setRanking] = useState<rankingType[]>([]);\n\n  useEffect(() => {\n    axios\n      .get(\"/ranking/\")\n      .then(({ data }) => {\n        setRanking(data.results);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  let leaderboardList;\n  if (ranking.length > 0) {\n    leaderboardList = ranking.map((rankPerson, index) => {\n      if(index < 10) {\n        return (<li key={index + rankPerson.username} className={styles.Leaderboard}>\n          <div className={styles.LeaderboardBox}>\n            <div>{rankPerson.username}</div>\n            <div>{rankPerson.total_points}</div>\n          </div>\n        </li>)\n      }\n      return null;\n    });\n  }\n\n  return (\n    <div className={styles.Main}>\n      <Panel>\n        <div className={styles.Main__Content}>\n          <h1>Play with your friends!</h1>\n          <p>\n            Discover exciting quizes from all around the world and create your\n            own! Participate in tournaments to become first in the leaderboard!\n          </p>\n          <Link to='/register'>\n            <div className={styles.Main__Button}>\n              <Button type='filled'>Create account</Button>\n            </div>\n          </Link>\n        </div>\n      </Panel>\n      <Panel>\n        <div className={styles.Main__Promo}>\n          <h1>Leaderboard</h1>\n          { !leaderboardList ? <Loader /> : <ol>{leaderboardList}</ol>}\n        </div>\n      </Panel>\n    </div>\n  );\n};\n\nexport default MainPage;\n","import { useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport axios from \"../../api/quiz\";\n\nimport Panel from \"../../components/Panel/Panel\";\nimport Button from \"../../components/Button/Button\";\nimport styles from \"./Register.module.scss\";\n\nconst Register: React.FC<RouteComponentProps> = ({ history }) => {\n  const { register, errors, handleSubmit, watch } = useForm({});\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n  const onSubmit = async (data: any) => {\n    const newUser = {\n      username: data.username,\n      email: data.email,\n      password1: data.password,\n      password2: data.confirmpassword\n    };\n    axios\n      .post(\"/auth/registration/\", newUser)\n      .then((response) => {\n        history.push('/login')\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Panel>\n      <div className={styles.Register}>\n        <h1>Create new account</h1>\n        <div className={styles.Register__FormBox}>\n          <form\n            className={styles.Register__Form}\n            onSubmit={handleSubmit(onSubmit)}\n            noValidate\n          >\n            <div className={styles.Register__Form__Input}>\n              <input\n                id='username'\n                name='username'\n                type='text'\n                placeholder='Username'\n                autoComplete='username'\n                ref={register({\n                  required: \"This is required\",\n                  minLength: {\n                    value: 5,\n                    message: \"Minimum 5 characters\",\n                  },\n                })}\n              />\n              <label htmlFor='username'>Username</label>\n              <div\n                className={\n                  styles.Register__ErrorMessage +\n                  \" \" +\n                  (errors[\"username\"] && styles.Register__ErrorMessage_show)\n                }\n              >\n                {errors[\"username\"] && errors[\"username\"].message}\n              </div>\n            </div>\n            <div className={styles.Register__Form__Input}>\n              <input\n                id='email'\n                name='email'\n                type='email'\n                placeholder='E-mail'\n                ref={register({\n                  required: \"This is required\",\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: \"Invalid email address\",\n                  },\n                })}\n              />\n              <label htmlFor='email'>E-mail</label>\n              <div\n                className={\n                  styles.Register__ErrorMessage +\n                  \" \" +\n                  (errors[\"email\"] && styles.Register__ErrorMessage_show)\n                }\n              >\n                {errors[\"email\"] && errors[\"email\"].message}\n              </div>\n            </div>\n            <div className={styles.Register__Form__Input}>\n              <input\n                id='password'\n                name='password'\n                type='password'\n                placeholder='Password'\n                autoComplete='new-password'\n                ref={register({ required: \"This is required\" })}\n              />\n              <label htmlFor='password'>Password</label>\n              <div\n                className={\n                  styles.Register__ErrorMessage +\n                  \" \" +\n                  (errors[\"password\"] && styles.Register__ErrorMessage_show)\n                }\n              >\n                {errors[\"password\"] && errors[\"password\"].message}\n              </div>\n            </div>\n            <div className={styles.Register__Form__Input}>\n              <input\n                id='confirmpassword'\n                name='confirmpassword'\n                type='password'\n                placeholder='Confirm password'\n                autoComplete='new-password'\n                ref={register({\n                  required: \"This is required\",\n                  validate: (value) =>\n                    value === password.current || \"The passwords do not match\",\n                })}\n              />\n              <label htmlFor='confirmpassword'>Confirm password</label>\n              <div\n                className={\n                  styles.Register__ErrorMessage +\n                  \" \" +\n                  (errors[\"confirmpassword\"] &&\n                    styles.Register__ErrorMessage_show)\n                }\n              >\n                {errors[\"confirmpassword\"] && errors[\"confirmpassword\"].message}\n              </div>\n            </div>\n            <div className={styles.Register__Button}>\n              <Button type='filled' isSubmit>Sign up</Button>\n            </div>\n          </form>\n        </div>\n        <div className={styles.Register__LoginInfo}>\n          You have an account already? <Link to=\"/login\">Log in</Link>\n        </div>\n      </div>\n    </Panel>\n  );\n};\n\nexport default withRouter(Register);\n","import { useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { store as notificationStore } from 'react-notifications-component';\n\nimport styles from './Login.module.scss';\nimport { AppState } from '../../store/store';\nimport { authLogin } from '../../store/auth/actions';\nimport { AuthData } from '../../store/auth/types';\n\nimport Panel from '../../components/Panel/Panel';\nimport Button from '../../components/Button/Button';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLogged: state.auth.loggedIn,\n  authError: state.auth.error\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onLogin: (authData: AuthData) => dispatch(authLogin(authData)),\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype LoginProps = PropsFromRedux;\n\nconst Login = ({ onLogin, isLogged, authError }: LoginProps) => {\n  const { register, errors, handleSubmit } = useForm({});\n\n  const onSubmit = async (data: any) => {\n    const userData = {\n      email: data.email,\n      password: data.password,\n    };\n    onLogin(userData);\n  };\n\n  useEffect(() => {\n  if (authError) {\n    notificationStore.addNotification({\n      title: \"Error!\",\n      message: \"Your credentials are incorrect!\",\n      type: \"danger\",\n      insert: \"top\",\n      container: \"top-center\",\n      animationIn: [\"animate__animated\", \"animate__headShake\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOutUp\"],\n      dismiss: {\n        duration: 2000\n      }\n    });\n  }\n}, [authError]);\n\n  return (\n    <Panel>\n      {isLogged ? <Redirect to=\"/\" /> : null}\n      <div className={styles.Login}>\n        <h1>Login</h1>\n        <div className={styles.Login__FormBox}>\n          <form\n            className={styles.Login__Form}\n            onSubmit={handleSubmit(onSubmit)}\n            noValidate\n          >\n            <div className={styles.Login__Form__Input}>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"E-mail\"\n                autoComplete=\"email\"\n                ref={register({\n                  required: 'This is required',\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: 'Invalid email address',\n                  },\n                })}\n              />\n              <label htmlFor=\"email\">E-mail</label>\n              <div\n                className={\n                  styles.Login__ErrorMessage +\n                  ' ' +\n                  (errors['email'] && styles.Login__ErrorMessage_show)\n                }\n              >\n                {errors['email'] && errors['email'].message}\n              </div>\n            </div>\n            <div className={styles.Login__Form__Input}>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                autoComplete=\"current-password\"\n                ref={register({ required: 'This is required' })}\n              />\n              <label htmlFor=\"password\">Password</label>\n              <div\n                className={\n                  styles.Login__ErrorMessage +\n                  ' ' +\n                  (errors['password'] && styles.Login__ErrorMessage_show)\n                }\n              >\n                {errors['password'] && errors['password'].message}\n              </div>\n            </div>\n            <div className={styles.Login__Button}>\n              <Button type=\"filled\" isSubmit>Sign in</Button>\n            </div>\n          </form>\n        </div>\n        <div className={styles.Login__RegisterInfo}>\n          You don't have an account yet?\n          <br />\n          <Link to=\"/register\">Create new account</Link>\n        </div>\n      </div>\n    </Panel>\n  );\n};\n\nexport default connector(Login);\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport { authLogout } from \"../../store/auth/actions\";\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    onLogout: () => dispatch(authLogout())\n  }\n}\n\nconst connector = connect(null, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Logout = ({ onLogout }: PropsFromRedux) => {\n  useEffect(() => {\n    onLogout();\n  }, [onLogout]);\n\n  return <Redirect to=\"/\"></Redirect>;\n};\n\n\nexport default connector(Logout);\n","import styles from './Table.module.scss';\n\ninterface TableProps {\n  titles: string[];\n  children: React.ReactNode;\n}\n\n\nconst Table = ({ titles, children }: TableProps) => {\n\n  return (\n    <table className={styles.Table}>\n      <thead>\n        <tr>\n          {\n            titles.map(title => (\n              <th key={title}>{title}</th>\n            ))\n          }\n        </tr>\n      </thead>\n      <tbody>{children}</tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","import { ChangeEvent, useEffect, useState } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { connect, ConnectedProps } from \"react-redux\";\n\nimport { AppState } from \"../../store/store\";\nimport axios from \"../../api/quiz\";\nimport styles from \"./Matches.module.scss\";\n\nimport Panel from \"../../components/Panel/Panel\";\nimport Loader from \"../../components/Loader/Loader\";\nimport Table from \"../../components/Table/Table\";\nimport Button from \"../../components/Button/Button\";\n\n\nconst mapStateToProps = (state: AppState) => ({\n  UserId: state.auth.user.id,\n});\n\nconst connector = connect(mapStateToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype MatchesProps = PropsFromRedux & RouteComponentProps;\n\nconst Matches: React.FC<MatchesProps> = ({ history, UserId }) => {\n  const [matchesData, setMatchesData] = useState<any>({});\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if(UserId) {\n      axios\n      .get(`/user/${UserId}/matches/`)\n      .then(({ data }) => {\n        setMatchesData(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    }\n  }, [UserId]);\n  \n  const handleCreateMatch = () => {\n    axios.post('/match/', {UserId: [UserId], Questions: []})\n    .then(({ data }) => {\n      history.push(`/matches/${data.Id}`);\n    })\n    .catch(err => {\n      console.log(err);\n    })\n  };\n\n  const checkMatchDetails = (matchId: number) => {\n    history.push(`/matches/${matchId}`);\n  };\n\n  const handleChangePage = (\n    event: ChangeEvent<unknown>,\n    value: number\n  ): void => {\n    axios\n      .get(`/user/${UserId}/matches/?page=${value}`)\n      .then((response) => {\n        setMatchesData(response.data);\n        setPage(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  let matchesElements = null;\n  if ('count' in matchesData) {\n    matchesElements = matchesData?.results.map((match: any) => {\n      const date = new Date(match.CreatedDate);\n      const newDate = date.toLocaleString(undefined, { hour12: false });\n\n      return (\n        <tr key={match.Id} onClick={() => checkMatchDetails(+match.Id)}>\n          <td>{match.Id}</td>\n          <td>{match.TournamentId || \"(no tournament)\"}</td>\n          <td>{newDate}</td>\n          <td>{match.Status}</td>\n        </tr>\n      );\n    });\n  }\n\n  return (\n    <Panel>\n      <div className={styles.Matches}>\n        {'count' in matchesData ? (\n          <>\n            <h1>Matches</h1>\n            <div className={styles.Matches__List}>\n              <Table titles={[\"Match Id\", \"Tournament Id\", \"Date\", \"Status\"]}>{matchesElements}</Table>\n            </div>\n            <div className={styles.Pagination}>\n              <Pagination\n                count={Math.ceil(matchesData.count / 10)}\n                color='primary'\n                size='large'\n                page={page}\n                onChange={handleChangePage}\n              />\n            </div>\n            <div className={styles.Matches__Button}>\n              <Button type=\"filled\" handleClicked={handleCreateMatch}>Create match</Button>\n            </div>\n          </>\n        ) : (\n          <Loader />\n        )}\n      </div>\n    </Panel>\n  );\n};\n\nexport default withRouter(connector(Matches));\n","import ReactDOM from 'react-dom';\n\n\n\ninterface DraggableRowProps {\n  provided: any;\n  snapshot: any;\n  content: {\n    id: number;\n    username: string;\n  };\n  portal: any\n}\n\nconst DraggableRow = ({ provided, snapshot, content, portal }: DraggableRowProps) => {\n  const usePortal: boolean = snapshot.isDragging;\n\n  const child: any = (\n    <tr\n      ref={provided.innerRef}\n      {...provided.draggableProps}\n      {...provided.dragHandleProps}\n      className=\"draggable-row\"\n    >\n      <td>{content.id}</td>\n      <td>{content.username}</td>\n    </tr>\n  );\n\n  if (!usePortal) {\n    return child;\n  }\n\n  // if dragging - put the item in a portal\n  return ReactDOM.createPortal(child, portal)};\n\nexport default DraggableRow;\n","import { useEffect, useState } from 'react';\n\nimport styles from './MatchSummary.module.scss';\nimport axios from '../../../api/quiz';\n\nimport Panel from '../../../components/Panel/Panel'\nimport Table from '../../../components/Table/Table';\nimport Loader from '../../../components/Loader/Loader'\n\nconst MatchSummary = ({ matchId }: {matchId: number}) => {\n  const [matchData, setMatchData] = useState<any>({});\n\n  useEffect(() => {\n    axios\n      .get(`/match-summary/?match_id=${matchId}`)\n      .then(({ data }) => {\n        setMatchData(data);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }, [matchId]);\n\n  return (\n    <Panel>\n      <div className={styles.MatchDetail}>\n        <h1>Match Summary nr {matchId}</h1>\n        { (matchData?.results) ?\n            <Table titles={['Username', 'Points']}>\n              {matchData.results.map((matchInfo: any) => (\n                <tr key={matchInfo.username}>\n                  <td>{matchInfo.username}</td>\n                  <td>{matchInfo.points_sum}</td>\n                </tr>\n              ))\n              }\n            </Table>\n          :\n          <Loader />\n        }\n      </div>\n    </Panel>\n  )\n}\n\nexport default MatchSummary\n","import { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Redirect, RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport axios from '../../../api/quiz';\nimport styles from './MatchDetail.module.scss';\nimport Panel from '../../../components/Panel/Panel';\nimport Loader from '../../../components/Loader/Loader';\nimport Table from '../../../components/Table/Table';\nimport Button from '../../../components/Button/Button';\nimport DraggableRow from './DraggableRow/DraggableRow';\nimport MatchSummary from '../MatchSummary/MatchSummary';\n\ninterface MatchDetailProps {\n  match: {\n    params: {\n      matchId: number;\n    };\n  };\n}\n\ninterface matchType {\n  CreatedDate?: string;\n  EndedDate?: string | null;\n  Id?: number;\n  Questions: any[];\n  Status?: 'Created' | 'Locked' | 'Ended';\n  TournamentId?: number;\n  UserId: userType[];\n}\n\ninterface userType {\n  username: string;\n  Id: number;\n  Avatar: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  is_staff: boolean;\n  is_active: boolean;\n  date_joined: string;\n  ranking_points: number | null;\n}\n\ntype editModeType = 'none' | 'users' | 'questions';\n\nconst portalTable: HTMLElement = document.createElement('table');\nconst portal: HTMLElement = document.createElement('tbody');\nportalTable.appendChild(portal);\nportal?.classList.add('my-super-cool-portal');\n\nif (!document.body) {\n  throw new Error('body not ready for portal creation!');\n}\n\ndocument.body.appendChild(portal);\n\nconst MatchDetail = (props: MatchDetailProps & RouteComponentProps) => {\n  const [match, setMatch] = useState<matchType | null>(null);\n  const [users, setUsers] = useState<userType[]>([]);\n  const [questions, setQuestions] = useState<any[]>([]);\n  const [editMode, setEditMode] = useState<editModeType>('none');\n\n  useEffect(() => {\n    let fetchedUsers: any;\n    let fetchedQuestions: any;\n    let matchDetails: any;\n\n    axios\n      .get(`/match/${props.match.params.matchId}/`)\n      .then(({ data }) => {\n        matchDetails = data;\n        fetchedUsers = matchDetails.UserId.map(((fUser: any) => ({ Id: fUser })));\n        const userRequests: any[] = [];\n        fetchedUsers.forEach((fUser: any) => {\n          userRequests.push(axios.get(`/view-user/${fUser.Id}/`));\n        });\n        return Promise.all(userRequests);\n      })\n      .then(response => {\n        fetchedUsers = fetchedUsers.map((userEl: any) => {\n          const userData = response.filter((usData: any) => usData.data.Id === userEl.Id)[0].data;\n          return {...userData};\n        })\n        matchDetails.UserId = fetchedUsers;\n        \n        fetchedQuestions = matchDetails.Questions.map(((fQuestion: any) => ({ Id: fQuestion })));\n        const questionRequests: any[] = [];\n        fetchedQuestions.forEach((fQuestion: any) => {\n          questionRequests.push(axios.get(`/question/${fQuestion.Id}/`));\n        });\n        return Promise.all(questionRequests);\n      }).then((response) => {\n        fetchedQuestions = fetchedQuestions.map((queEl: any) => {\n          const questionData = response.filter((queData: any) => queData.data.Id === queEl.Id)[0].data;\n          return {...questionData};\n        });\n        matchDetails.Questions = fetchedQuestions;\n        setMatch(matchDetails);\n\n        return axios.get('/view-user/');\n      })\n      .then(({ data }) => {\n        const filtUsers = data.results.filter((filtUser: any) => {\n          return !matchDetails.UserId.find((matchUs: any) => matchUs.Id === filtUser.Id);\n        });\n        setUsers(filtUsers);\n\n        return axios.get('/question/');\n      })\n      .then(({ data }) => {\n        const filtQuestions = data.results.filter((filtQuestion: any) => {\n          return !matchDetails.Questions.find((matchUs: any) => matchUs.Id === filtQuestion.Id);\n        });\n        setQuestions(filtQuestions);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [props.match.params.matchId]);\n\n  const toggleEditMode = (mode: editModeType) => {\n    if (editMode === mode) {\n      setEditMode('none');\n    } else {\n      setEditMode(mode);\n    }\n  };\n\n  const onDragEnd = (result: any) => {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.destination.index === result.source.index) {\n      return;\n    }\n\n    if (result.destination.droppableId === result.source.droppableId) {\n      return;\n    }\n\n    if (!(result.destination.droppableId.includes(\"Users\") && result.source.droppableId.includes(\"Users\")) &&\n        !(result.destination.droppableId.includes(\"Questions\") && result.source.droppableId.includes(\"Questions\"))) {\n      return;\n    }\n\n    if (result.destination.droppableId === 'allUsers') { // remove user from match\n      const newUsers: any = [...users];\n      const newMatch: any = {...match};\n      let newMatchUsers: any = [...newMatch.UserId];\n      const foundUser: any = newMatchUsers.find(((usData: any) => usData.username === result.draggableId));\n      \n      newMatchUsers = newMatchUsers.filter((usData: any) => usData.username !== result.draggableId);\n      newUsers.push(foundUser);\n      \n      setMatch({ ...newMatch, UserId: [...newMatchUsers] });\n      setUsers([...newUsers]);\n\n      const newUserList = newMatchUsers.map((userEl: any) => userEl.Id);\n      axios.patch(`/match/${props.match.params.matchId}/`, {'UserId': newUserList})\n\n    } else if (result.destination.droppableId === 'matchUsers') { // add user to match\n      let newUsers: any = [...users];\n      const newMatch: any = {...match};\n      let newMatchUsers: any = [...newMatch.UserId];\n      const foundUser: any = newUsers.find(((usData: any) => usData.username === result.draggableId));\n      \n      newUsers = newUsers.filter((usData: any) => usData.username !== result.draggableId);\n      newMatchUsers.push(foundUser);\n      \n      setMatch({ ...newMatch, UserId: [...newMatchUsers] });\n      setUsers([...newUsers]);\n\n      const newUserList = newMatchUsers.map((userEl: any) => userEl.Id);\n      axios.patch(`/match/${props.match.params.matchId}/`, {'UserId': newUserList})\n      \n    } else if (result.destination.droppableId === 'allQuestions') {\n      const newQuestions: any = [...questions];\n      const newMatch: any = {...match};\n      let newMatchQuestions: any = [...newMatch.Questions];\n      const foundQuestion: any = newMatchQuestions.find(((queData: any) => queData.Text === result.draggableId));\n      \n      newMatchQuestions = newMatchQuestions.filter((queData: any) => queData.Text !== result.draggableId);\n      newQuestions.push(foundQuestion);\n      \n      setMatch({ ...newMatch, Questions: [...newMatchQuestions] });\n      setQuestions([...newQuestions]);\n\n      const newQuestionList = newMatchQuestions.map((queEl: any) => queEl.Id);\n      axios.patch(`/match/${props.match.params.matchId}/`, {'Questions': newQuestionList})\n\n    } else if (result.destination.droppableId === 'matchQuestions') {\n      let newQuestions: any = [...questions];\n      const newMatch: any = {...match};\n      let newMatchQuestions: any = [...newMatch.Questions];\n      const foundQuestion: any = newQuestions.find(((queData: any) => queData.Text === result.draggableId));\n      \n      newQuestions = newQuestions.filter((queData: any) => queData.Text !== result.draggableId);\n      newMatchQuestions.push(foundQuestion);\n      \n      setMatch({ ...newMatch, Questions: [...newMatchQuestions] });\n      setQuestions([...newQuestions]);\n\n      const newQuestionList = newMatchQuestions.map((queEl: any) => queEl.Id);\n      axios.patch(`/match/${props.match.params.matchId}/`, {'Questions': newQuestionList})\n    }\n  }\n\n  const handleStartMatch = () => {\n    axios\n      .patch(`/match/${props.match.params.matchId}/`, { Status: 'Locked' })\n      .then(() => {\n        props.history.push(`/quiz/${props.match.params.matchId}/`)\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  let matchContent = <Loader />;\n  if (match) {\n    switch (match.Status) {\n      case 'Created':\n        matchContent = (\n          <>\n            {editMode === 'users' ? (\n              <Panel>\n                <div className={styles.Created__Edit__Users}>\n                  <h1>Users</h1>\n                  <Droppable droppableId=\"allUsers\">\n                    {(droppableProvided) => (\n                      <div ref={droppableProvided.innerRef} {...droppableProvided.droppableProps}>\n                        <Table titles={['Id', 'Username']}>\n                          {users.map((userEl, index) => (\n                            <Draggable\n                              draggableId={userEl.username}\n                              index={index}\n                              key={userEl.Id}\n                            >\n                              {(draggableProvided, draggableSnapshot) => (\n                                <DraggableRow provided={draggableProvided}\n                                snapshot={draggableSnapshot} portal={portal} content={{id: userEl.Id, username: userEl.username}}/>\n                              )}\n                            </Draggable>\n                          ))}\n                          {droppableProvided.placeholder}\n                        </Table>\n                      </div>\n                    )}\n                  </Droppable>\n                </div>\n              </Panel>\n            ) : null}\n            <Panel>\n              <div className={styles.MatchDetail}>\n                <h1>Match nr {props.match.params.matchId}</h1>\n                <div className={styles.Created}>\n                  <div className={styles.Created__Panels}>\n                    <div className={styles.Created__Users}>\n                      <h3>Users</h3>\n                      <Droppable droppableId=\"matchUsers\">\n                      {(droppableProvided) => (\n                          <div ref={droppableProvided.innerRef} {...droppableProvided.droppableProps} style={{width: '100%'}}>\n                            <Table titles={['Id', 'Username']}>\n                              {match.UserId.map((userEl, index) => (\n                                <Draggable\n                                draggableId={userEl.username}\n                                index={index}\n                                key={userEl.Id}\n                              >\n                                {(draggableProvided, draggableSnapshot) => (\n                                  <DraggableRow provided={draggableProvided}\n                                  snapshot={draggableSnapshot} portal={portal} content={{id: userEl.Id, username: userEl.username}}/>\n                                )}\n                              </Draggable>\n                              ))}\n                              {droppableProvided.placeholder}\n                            </Table>\n                          </div>\n                        )}\n                      </Droppable>\n                      <div className={styles.Created__Button}>\n                        <Button\n                          type=\"filled\"\n                          handleClicked={() => toggleEditMode('users')}\n                        >\n                          Edit users\n                        </Button>\n                      </div>\n                    </div>\n                    <div className={styles.Created__Questions}>\n                      <h3>Questions</h3>\n\n                      <Droppable droppableId=\"matchQuestions\">\n                      {(droppableProvided) => (\n                          <div ref={droppableProvided.innerRef} {...droppableProvided.droppableProps} style={{width: '100%'}}>\n                            <Table titles={['Id', 'Question']}>\n                              {match.Questions.map((que, index) => (\n                                <Draggable\n                                draggableId={que.Text}\n                                index={index}\n                                key={que.Id}\n                              >\n                                {(draggableProvided, draggableSnapshot) => (\n                                  <DraggableRow provided={draggableProvided}\n                                  snapshot={draggableSnapshot} portal={portal} content={{id: que.Id, username: que.Text}}/>\n                                )}\n                              </Draggable>\n                              ))}\n                              {droppableProvided.placeholder}\n                            </Table>\n                          </div>\n                        )}\n                      </Droppable>\n                      <div className={styles.Created__Button}>\n                        <Button\n                          type=\"filled\"\n                          handleClicked={() => toggleEditMode('questions')}\n                        >\n                          Edit questions\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className={styles.Created__Start}>\n                    <div className={styles.Created__Button}>\n                      <Button type=\"filled\" handleClicked={handleStartMatch}>Start</Button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Panel>\n            {editMode === 'questions' ? (\n              <Panel>\n                <div className={styles.Created__Edit__Questions}>\n                  <h1>Questions</h1>\n                  <Droppable droppableId=\"allQuestions\">\n                    {(droppableProvided) => (\n                      <div ref={droppableProvided.innerRef} {...droppableProvided.droppableProps}>\n                        <Table titles={['Id', 'Question']}>\n                          {questions.map((queEl, index) => (\n                            <Draggable\n                              draggableId={queEl.Text}\n                              index={index}\n                              key={queEl.Id}\n                            >\n                              {(draggableProvided, draggableSnapshot) => (\n                                <DraggableRow provided={draggableProvided}\n                                snapshot={draggableSnapshot} portal={portal} content={{id: queEl.Id, username: queEl.Text}}/>\n                              )}\n                            </Draggable>\n                          ))}\n                          {droppableProvided.placeholder}\n                        </Table>\n                      </div>\n                    )}\n                  </Droppable>\n                </div>\n              </Panel>\n            ) : null}\n          </>\n        );\n        break;\n      case 'Locked':\n        matchContent = (<Redirect to={`/quiz/${props.match.params.matchId}`} />);\n        break;\n      case 'Ended':\n        matchContent = (<MatchSummary matchId={props.match.params.matchId} />);\n        break;\n      default:\n        return <div>Invalid match status</div>;\n    }\n  }\n\n  return (\n    <div className={styles.Panels}>\n      <DragDropContext onDragEnd={onDragEnd}>{matchContent}</DragDropContext>\n    </div>\n  );\n};\n\nexport default withRouter(MatchDetail);\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport axios from \"../../api/quiz\";\nimport styles from \"./Leagues.module.scss\";\n\nimport Panel from \"../../components/Panel/Panel\";\nimport Button from \"../../components/Button/Button\";\nimport Loader from \"../../components/Loader/Loader\";\nimport Table from \"../../components/Table/Table\";\n\nconst Leagues = ({ history }: RouteComponentProps) => {\n  const [leaguesList, setLeaguesList] = useState([]);\n  const [noLeagues, setNoLeagues] = useState(0);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    axios\n      .get(\"/league/\")\n      .then((response) => {\n        setNoLeagues(response.data.count);\n        setLeaguesList(response.data.results);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const handleChangePage = (\n    event: ChangeEvent<unknown>,\n    value: number\n  ): void => {\n    axios\n      .get(`/league/?page=${value}`)\n      .then((response) => {\n        setLeaguesList(response.data.results);\n        setPage(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const checkLeagueDetail = (leagueId: number) => {\n    history.push(`/leagues/${leagueId}`);\n  }\n\n  return (\n    <Panel>\n      <div className={styles.Leagues}>\n        <h1>Leagues</h1>\n        <div className={styles.Leagues__List}>\n          <Table titles={[\"Id\", \"Name\"]}>\n            {leaguesList.length > 0 ? (\n              leaguesList.map((league: any) => (\n                <tr key={league.Id} onClick={() => checkLeagueDetail(+league.Id)}>\n                  <td>{league.Id}</td>\n                  <td>{league.Name}</td>\n                </tr>\n              ))\n            ) : (\n              <Loader />\n            )}\n          </Table>\n        </div>\n        <div className={styles.Pagination}>\n          <Pagination\n            count={Math.ceil(noLeagues / 10)}\n            color='primary'\n            size='large'\n            page={page}\n            onChange={handleChangePage}\n          />\n        </div>\n        <div className={styles.Leagues__Button}>\n          <Button type='filled'>Add new League</Button>\n        </div>\n      </div>\n    </Panel>\n  );\n};\n\nexport default withRouter(Leagues);\n","import { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { store as notificationStore } from 'react-notifications-component';\nimport 'animate.css/animate.min.css';\n\nimport { AppState } from '../../store/store';\nimport { updateUserData } from '../../store/auth/actions';\nimport styles from './Settings.module.scss';\nimport axios from '../../api/quiz';\nimport Panel from '../../components/Panel/Panel';\nimport Button from '../../components/Button/Button';\n\nconst mapStateToProps = (state: AppState) => ({\n  user: state.auth.user,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  updateUserData: (userData: any) => dispatch(updateUserData(userData))\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Settings = ({ user, updateUserData }: PropsFromRedux) => {\n  const { register, errors, handleSubmit, setValue } = useForm({});\n\n  useEffect(() => {\n    setValue('username', user.username);\n    setValue('firstName', user.first_name);\n    setValue('lastName', user.last_name);\n  }, [user, setValue])\n  \n  const onSubmit = async (data: any, e: any) => {\n    const newUserData = {\n      ...(data.username !== user.username && { username: data.username }),\n      ...(data.firstName !== user.first_name && { first_name: data.firstName }),\n      ...(data.lastName !== user.last_name && { last_name: data.lastName }),\n    };\n    if (data.avatar.length > 0) {\n      const formData = new FormData();\n      formData.append('Avatar', data.avatar[0]);\n      axios\n        .patch(`/upload-avatar/${user.id}/`, formData)\n        .then(() => {\n          notificationStore.addNotification({\n            title: \"Successful!\",\n            message: \"Your avatar was saved!\",\n            type: \"success\",\n            insert: \"top\",\n            container: \"top-center\",\n            animationIn: [\"animate__animated\", \"animate__bounceIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {\n              duration: 3000\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    if (Object.keys(newUserData).length > 0)\n    {\n      axios\n        .patch(`/auth/user/`, newUserData)\n        .then(() => {\n          updateUserData(newUserData);\n          notificationStore.addNotification({\n            title: \"Successful!\",\n            message: \"Your settings was saved!\",\n            type: \"success\",\n            insert: \"top\",\n            container: \"top-center\",\n            animationIn: [\"animate__animated\", \"animate__bounceIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {\n              duration: 3000\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } \n  };\n\n  return (\n    <Panel>\n      <div className={styles.Settings}>\n        <h1>Settings</h1>\n        <form\n          className={styles.Settings__Form}\n          onSubmit={handleSubmit(onSubmit)}\n          noValidate\n        >\n          {/* USERNAME */}\n          <div className={styles.Settings__Form__Input}>\n            <input\n              id=\"username\"\n              name=\"username\"\n              type=\"text\"\n              placeholder=\"Username\"\n              autoComplete=\"username\"\n              ref={register({\n                required: 'This is required',\n                minLength: {\n                  value: 5,\n                  message: 'Minimum 5 characters',\n                },\n              })}\n            />\n            <label htmlFor=\"username\">Username</label>\n            <div\n              className={\n                styles.Settings__ErrorMessage +\n                ' ' +\n                (errors['username'] && styles.Settings__ErrorMessage_show)\n              }\n            >\n              {errors['username'] && errors['username'].message}\n            </div>\n          </div>\n          {/* FIRST NAME */}\n          <div className={styles.Settings__Form__Input}>\n            <input\n              id=\"firstName\"\n              name=\"firstName\"\n              type=\"text\"\n              placeholder=\"First name\"\n              autoComplete=\"given-name\"\n              ref={register({\n                maxLength: {\n                  value: 150,\n                  message: 'Maximum 150 characters',\n                },\n              })}\n            />\n            <label htmlFor=\"firstName\">First name</label>\n            <div\n              className={\n                styles.Settings__ErrorMessage +\n                ' ' +\n                (errors['firstName'] && styles.Settings__ErrorMessage_show)\n              }\n            >\n              {errors['firstName'] && errors['firstName'].message}\n            </div>\n          </div>\n          {/* LAST NAME */}\n          <div className={styles.Settings__Form__Input}>\n            <input\n              id=\"lastName\"\n              name=\"lastName\"\n              type=\"text\"\n              placeholder=\"Last name\"\n              autoComplete=\"family-name\"\n              ref={register({\n                maxLength: {\n                  value: 150,\n                  message: 'Maximum 150 characters',\n                },\n              })}\n            />\n            <label htmlFor=\"lastName\">Last name</label>\n            <div\n              className={\n                styles.Settings__ErrorMessage +\n                ' ' +\n                (errors['lastName'] && styles.Settings__ErrorMessage_show)\n              }\n            >\n              {errors['lastName'] && errors['lastName'].message}\n            </div>\n          </div>\n          {/* AVATAR */}\n          <div className={styles.Settings__Form__Input}>\n            <input\n              id=\"avatar\"\n              name=\"avatar\"\n              type=\"file\"\n              placeholder=\"\"\n              autoComplete=\"avatar\"\n              ref={register}\n            />\n            <label htmlFor=\"avatar\">Avatar</label>\n            <div\n              className={\n                styles.Settings__ErrorMessage +\n                ' ' +\n                (errors['avatar'] && styles.Settings__ErrorMessage_show)\n              }\n            >\n              {errors['avatar'] && errors['avatar'].message}\n            </div>\n          </div>\n          <div className={styles.Settings__Button}>\n            <Button type=\"filled\" isSubmit>Save</Button>\n          </div>\n        </form>\n      </div>\n    </Panel>\n  );\n};\n\nexport default connector(Settings);\n","import { ChangeEvent, useEffect, useState } from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nimport axios from \"../../../api/quiz\";\nimport styles from \"./Questions.module.scss\";\nimport { Question as QuestionType } from \"../../../types/dbTypes\";\n\nimport Panel from \"../../../components/Panel/Panel\";\nimport Table from \"../../../components/Table/Table\";\nimport Loader from \"../../../components/Loader/Loader\";\n\ninterface QuestionObjectType {\n  count?: number;\n  next?: string;\n  previous?: string;\n  results?: QuestionType[];\n}\n\ninterface QuestionsProps {\n  addedQuestions: QuestionType[];\n}\n\nconst Questions = ({ addedQuestions }: QuestionsProps) => {\n  const questionTitles = [\"Id\", \"Question\"];\n  const [questionData, setQuestionData] = useState<QuestionObjectType>({});\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    axios\n      .get(\"/question/\")\n      .then(({ data }) => {\n        console.log(data.results);\n        setQuestionData(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const handleChangePage = (\n    event: ChangeEvent<unknown>,\n    value: number\n  ): void => {\n    axios\n      .get(`/question/?page=${value}`)\n      .then((response) => {\n        setQuestionData(response.data);\n        setPage(value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  let questionElements = null;\n  if (questionData?.results && questionData.results.length > 0) {\n    questionElements = questionData.results\n      .concat(addedQuestions)\n      .map((questionEl) => (\n        <tr key={questionEl.Id}>\n          <td>{questionEl.Id}</td>\n          <td>{questionEl.Text}</td>\n        </tr>\n      ));\n  }\n\n  return (\n    <Panel>\n      <div className={styles.Questions}>\n        <h1>Questions</h1>\n        <div className={styles.Questions__List}>\n          {questionData?.count ? (\n            <>\n              <Table titles={questionTitles}>{questionElements}</Table>\n              <div className={styles.Pagination}>\n                <Pagination\n                  count={Math.ceil(questionData.count / 10)}\n                  color='primary'\n                  size='large'\n                  page={page}\n                  onChange={handleChangePage}\n                />\n              </div>\n            </>\n          ) : (\n            <Loader />\n          )}\n        </div>\n      </div>\n    </Panel>\n  );\n};\n\nexport default Questions;\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { store as notificationStore } from 'react-notifications-component';\n\nimport axios from '../../api/quiz';\nimport styles from './AddQuestion.module.scss';\nimport { Question as QuestionType } from '../../types/dbTypes';\n\nimport Panel from '../../components/Panel/Panel';\nimport Button from '../../components/Button/Button';\nimport Questions from './Questions/Questions';\n\nconst AddQuestion = () => {\n  const [answerElements, setAnswerElements] = useState<number[]>([]);\n  const [newQuestions, setNewQuestions] = useState<QuestionType[]>([]);\n  const { register, errors, handleSubmit } = useForm({});\n  const onSubmit = async (data: any, e: any) => {\n    const newAnswers = [];\n\n    for (const ans in data) {\n      if (ans.includes('answer')) {\n        const ansId: number = +ans.split('-')[1];\n        const isCorrect = data.correctAnswers.includes(`${ansId}`);\n        newAnswers.push({\n          \"Text\": data[ans],\n          \"CorrectAnswer\": isCorrect\n        })\n      }\n    }\n\n    const newQuestion = {\n      Text: data.question,\n      answers: newAnswers\n    }\n\n    axios\n      .post('/question/', newQuestion)\n      .then(({data}) => {\n        const newLocalQuestion: QuestionType = {\n          Id: data.Id,\n          Text: newQuestion.Text\n        };\n        const newLocalQuestionList = [...newQuestions];\n        newLocalQuestionList.push(newLocalQuestion);\n        setNewQuestions(newLocalQuestionList)\n\n        notificationStore.addNotification({\n          title: \"Successful!\",\n          message: \"Your question was added!\",\n          type: \"success\",\n          insert: \"top\",\n          container: \"top-center\",\n          animationIn: [\"animate__animated\", \"animate__bounceIn\"],\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n          dismiss: {\n            duration: 3000\n          }\n        });\n        e.target.reset(); \n      }).catch(err => {\n        console.log(err);\n      })\n  };\n\n  const handleNewAnswer = () => {\n    const newAnswers: number[] = [...answerElements];\n    newAnswers.push(answerElements.length + 1);\n    setAnswerElements(newAnswers);\n  };\n\n  const handleRemoveAnswer = () => {\n    const newAnswers: number[] = [...answerElements];\n    newAnswers.pop();\n    setAnswerElements(newAnswers);\n  };\n\n  let additionalAnswers = null;\n  if (answerElements.length > 0) {\n    additionalAnswers = answerElements.map((answerId) => {\n      const ansId = answerId + 2;\n      const answerTag = `answer-${ansId}`;\n\n      return (\n        <div\n          className={styles.AddQuestion__Form__Answer}\n          key={`answer${ansId}`}\n        >\n          <input\n            id={answerTag}\n            name={answerTag}\n            type=\"text\"\n            placeholder={`Answer ${ansId}`}\n            ref={register({\n              required: 'This is required',\n            })}\n          />\n          <label\n            htmlFor={answerTag}\n            className={styles.AddQuestion__Form__Answer__Label}\n          >{`Answer ${ansId}`}</label>\n          <div\n            className={\n              styles.AddQuestion__ErrorMessage +\n              ' ' +\n              (errors[answerTag] && styles.AddQuestion__ErrorMessage_show)\n            }\n          >\n            {errors[answerTag] && errors[answerTag].message}\n          </div>\n          <div className={styles.AddQuestion__Form__Answer__Radio}>\n            <input\n              type=\"checkbox\"\n              id={`correctAnswer-${ansId}`}\n              name=\"correctAnswers\"\n              value={ansId}\n              ref={register()}\n            />\n            <label htmlFor={`correctAnswer-${ansId}`}></label>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  return (\n    <div className={styles.Panels}>\n      <Panel>\n        <div className={styles.AddQuestion}>\n          <h1>Add Question</h1>\n          <form\n            className={styles.AddQuestion__Form}\n            onSubmit={handleSubmit(onSubmit)}\n            noValidate\n          >\n            <div className={styles.AddQuestion__Form__Input}>\n              <input\n                id=\"question\"\n                name=\"question\"\n                type=\"text\"\n                placeholder=\"Question\"\n                autoComplete=\"question\"\n                ref={register({\n                  required: 'This is required',\n                })}\n              />\n              <label htmlFor=\"question\">Question</label>\n              <div\n                className={\n                  styles.AddQuestion__ErrorMessage +\n                  ' ' +\n                  (errors['question'] && styles.AddQuestion__ErrorMessage_show)\n                }\n              >\n                {errors['question'] && errors['question'].message}\n              </div>\n            </div>\n            <div className={styles.AddQuestion__AnswersLabel}>\n              <div>Answers</div>\n              <div>Correct?</div>\n            </div>\n            <div className={styles.AddQuestion__Form__Answer}>\n              <input\n                id=\"answer-1\"\n                name=\"answer-1\"\n                type=\"text\"\n                placeholder=\"Answer 1\"\n                ref={register({\n                  required: 'This is required',\n                })}\n              />\n              <label\n                htmlFor=\"answer-1\"\n                className={styles.AddQuestion__Form__Answer__Label}\n              >\n                Answer 1\n              </label>\n              <div\n                className={\n                  styles.AddQuestion__ErrorMessage +\n                  ' ' +\n                  (errors['answer-1'] && styles.AddQuestion__ErrorMessage_show)\n                }\n              >\n                {errors['answer-1'] && errors['answer-1'].message}\n              </div>\n              <div className={styles.AddQuestion__Form__Answer__Radio}>\n                <input\n                  type=\"checkbox\"\n                  id=\"correctAnswer-1\"\n                  name=\"correctAnswers\"\n                  value=\"1\"\n                  defaultChecked\n                  ref={register()}\n                />\n                <label htmlFor=\"correctAnswer-1\"></label>\n              </div>\n            </div>\n            <div className={styles.AddQuestion__Form__Answer}>\n              <input\n                id=\"answer-2\"\n                name=\"answer-2\"\n                type=\"text\"\n                placeholder=\"Answer 2\"\n                ref={register({\n                  required: 'This is required',\n                })}\n              />\n              <label\n                htmlFor=\"answer-2\"\n                className={styles.AddQuestion__Form__Answer__Label}\n              >\n                Answer 2\n              </label>\n              <div\n                className={\n                  styles.AddQuestion__ErrorMessage +\n                  ' ' +\n                  (errors['answer-2'] && styles.AddQuestion__ErrorMessage_show)\n                }\n              >\n                {errors['answer-2'] && errors['answer-2'].message}\n              </div>\n              <div className={styles.AddQuestion__Form__Answer__Radio}>\n                <input\n                  type=\"checkbox\"\n                  id=\"correctAnswer-2\"\n                  name=\"correctAnswers\"\n                  value=\"2\"\n                  ref={register()}\n                />\n                <label htmlFor=\"correctAnswer-2\"></label>\n              </div>\n            </div>\n            {additionalAnswers}\n            <div className={styles.AddQuestion__Control}>\n              <div className={styles.AddQuestion__Control__Button}>\n                <Button type=\"filled\" handleClicked={handleNewAnswer}>\n                  Add new answer\n                </Button>\n              </div>\n              <div className={styles.AddQuestion__Control__Button}>\n                <Button type=\"filled\" handleClicked={handleRemoveAnswer}>\n                  Remove answer\n                </Button>\n              </div>\n            </div>\n            <div className={styles.AddQuestion__Button}>\n              <Button type=\"filled\" isSubmit>\n                Add question\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Panel>\n      <Questions addedQuestions={newQuestions}/>\n    </div>\n  );\n};\n\nexport default AddQuestion;\n","import { useEffect, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\n\nimport { AppState } from \"../../store/store\";\nimport axios from \"../../api/quiz\";\nimport styles from \"./Friends.module.scss\";\n\nimport Panel from \"../../components/Panel/Panel\";\nimport Loader from \"../../components/Loader/Loader\";\nimport Table from \"../../components/Table/Table\";\nimport Button from \"../../components/Button/Button\";\n\nconst mapStateToProps = (state: AppState) => ({\n  UserId: state.auth.user.id,\n});\n\nconst connector = connect(mapStateToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Friends = ({ UserId }: PropsFromRedux) => {\n  const [friendsList, setFriendsList] = useState<any>({});\n\n  useEffect(() => {\n    if (UserId) {\n      axios\n        .get(`/friends/?user_id=${UserId}`)\n        .then(({ data }) => {\n          console.log(data);\n          setFriendsList(data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [UserId]);\n\n  const handleRequest = (\n    requestId: number,\n    actionType: \"Removed\" | \"Accepted\" | \"Rejected\"\n  ) => {\n    axios\n      .patch(`/friend-request/${requestId}/`, { Status: actionType })\n      .then(() => {\n        let newFriendsList = [...friendsList.results];\n        let foundFriendIndex = newFriendsList.findIndex((friendEl: any) => friendEl.Id === requestId);\n        switch (actionType) {\n          case 'Accepted':\n            newFriendsList[foundFriendIndex].Status = actionType;\n            break;\n          case 'Rejected':\n          case 'Removed': \n            newFriendsList.splice(foundFriendIndex, 1);\n            break;\n        }\n        setFriendsList({...friendsList, results: newFriendsList});\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  let friendsListElement: any = <Loader />;\n  if (\"results\" in friendsList) {\n    friendsListElement = \"No friends :(\";\n\n    if (friendsList.results.length > 0) {\n      friendsListElement = (\n        <Table titles={[\"UserId\", \"FriendId\", \"Status\", \"Actions\"]}>\n          {friendsList.results.map((frReq: any) => (\n            <tr key={frReq.Id}>\n              <td>{frReq.UserId}</td>\n              <td>{frReq.FriendId}</td>\n              <td>{frReq.Status}</td>\n              <td className={styles.Friends__Buttons}>\n                {frReq.Status === \"Accepted\" ? (\n                  <div className={styles.Friends__Button}>\n                    <Button\n                      type='filled'\n                      handleClicked={() => handleRequest(frReq.Id, \"Removed\")}\n                    >\n                      Remove\n                    </Button>\n                  </div>\n                ) : frReq.Status === \"Send\" && frReq.FriendId === UserId ? (\n                  <>\n                    <div className={styles.Friends__Button}>\n                      <Button\n                        type='filled'\n                        handleClicked={() => handleRequest(frReq.Id, \"Accepted\")}\n                      >\n                        Accept\n                      </Button>\n                    </div>\n                    <div className={styles.Friends__Button}>\n                      <Button\n                        type='filled'\n                        handleClicked={() => handleRequest(frReq.Id, \"Rejected\")}\n                      >\n                        Reject\n                      </Button>\n                    </div>\n                  </>\n                ) : null}\n              </td>\n            </tr>\n          ))}\n        </Table>\n      );\n    }\n  }\n\n  return (\n    <Panel>\n      <div className={styles.Friends}>\n        <h1>Friends</h1>\n        <div className={styles.Friends__List}>{friendsListElement}</div>\n      </div>\n    </Panel>\n  );\n};\n\nexport default connector(Friends);\n","import { useEffect, useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nimport styles from \"./LeagueDetails.module.scss\";\nimport axios from \"../../../api/quiz\";\n\nimport Panel from \"../../../components/Panel/Panel\";\nimport Table from \"../../../components/Table/Table\";\nimport Loader from \"../../../components/Loader/Loader\";\nimport Button from \"../../../components/Button/Button\";\n\ninterface LeagueDetailProps {\n  match: {\n    params: {\n      leagueId: number;\n    };\n  };\n}\n\nconst LeagueDetail = (props: LeagueDetailProps & RouteComponentProps) => {\n  const [leagueData, setLeagueData] = useState<any>({});\n\n  useEffect(() => {\n    axios\n      .get(`/league/${props.match.params.leagueId}/`)\n      .then(({ data }) => {\n        setLeagueData(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const handleCreateTournament = () => {\n    axios\n      .post(\"/tournament/\", {\n        LeagueId: props.match.params.leagueId,\n        Name: \"New tournament\",\n      })\n      .then(({data}) => {\n        props.history.push(`/tournament/${data.Id}`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleCheckTournament = (tournamentId: number) => {\n    props.history.push(`/tournament/${tournamentId}`);\n  }\n\n  let tournamentListElement: any = <Loader />;\n  if (\"tournament_set\" in leagueData) {\n    tournamentListElement = \"No tournaments\";\n\n    if (leagueData.tournament_set.length > 0) {\n      tournamentListElement = (\n        <Table titles={[\"Id\", \"Name\"]}>\n          {leagueData.tournament_set.map((tour: any) => (\n            <tr key={tour.Id} onClick={() => handleCheckTournament(tour.Id)}>\n              <td>{tour.Id}</td>\n              <td>{tour.Name}</td>\n            </tr>\n          ))}\n        </Table>\n      );\n    }\n  }\n\n  return (\n    <Panel>\n      <div className={styles.LeagueDetail}>\n        <h1>League nr {props.match.params.leagueId}</h1>\n        <h2>{leagueData?.Name}</h2>\n        <div className={styles.LeagueDetail__Tournaments}>\n          <h3>Tournaments</h3>\n          {tournamentListElement}\n        </div>\n        <div className={styles.LeagueDetail__Button}>\n          <Button type='filled' handleClicked={handleCreateTournament}>Add tournament</Button>\n        </div>\n      </div>\n    </Panel>\n  );\n};\n\nexport default LeagueDetail;\n","import styles from \"./Tournament.module.scss\";\n\nimport Panel from \"../../components/Panel/Panel\";\n\ninterface TournamentProps {\n  match: {\n    params: {\n      tournamentId: number;\n    };\n  };\n}\n\nconst Tournament = (props: TournamentProps) => {\n  return (\n    <Panel>\n      <div className={styles.Tournament}>\n        <h1>Tournament nr {props.match.params.tournamentId}</h1>\n        <div className={styles.Tournament}></div>\n      </div>\n    </Panel>\n  );\n};\n\nexport default Tournament;\n","import { useEffect, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\n\nimport styles from \"./Quiz.module.scss\";\nimport axios from \"../../api/quiz\";\nimport { AppState } from \"../../store/store\";\nimport { MatchQuestion, AnswerCreatedWithQuestion } from \"../../types/dbTypes\";\n\nimport Panel from \"../../components/Panel/Panel\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\n\ninterface QuizProps {\n  match: {\n    params: {\n      matchId: number;\n    };\n  };\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  UserId: state.auth.user.id,\n});\n\nconst connector = connect(mapStateToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype CombinedQuizProps = PropsFromRedux & QuizProps & RouteComponentProps;\n\nconst Quiz = (props: CombinedQuizProps) => {\n  const matchId = props.match.params.matchId;\n  const { UserId, history } = props;\n  const [quizData, setQuizData] = useState<MatchQuestion>({});\n\n  useEffect(() => {\n    refreshQuestion();\n  }, []);\n\n  const refreshQuestion = () => {\n    axios\n      .get(`/current-match-question/${matchId}/`)\n      .then(({ data }) => {\n        console.log(data);\n        setQuizData(data);\n      })\n      .catch((err) => {\n        if (\n          err?.response?.data?.non_field_errors.find(\n            (errMsg: string) => errMsg === 'Status match have to be \"Locked\"'\n          )\n        ) {\n          history.push(`/matches/${matchId}/`);\n        }\n\n        console.log(err);\n      });\n  };\n\n  const handleAnswerQuestion = (answerId: number) => {\n    const newAnswer = {\n      MatchQuestionId: quizData.Id,\n      Answered: [answerId],\n      UserId: UserId,\n    };\n\n    axios\n      .post(\"/answer-match-question/\", newAnswer)\n      .then(({ data }) => {\n        console.log(data);\n        refreshQuestion();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  let quizContent: any = <Loader />;\n  if (quizData?.Id && quizData.QuestionId?.answers) {\n    quizContent = quizData.QuestionId?.answers.map(\n      (ansData: AnswerCreatedWithQuestion) => (\n        <div\n          key={ansData.Id}\n          className={styles.Quiz__Answers__Answer}\n          onClick={() => handleAnswerQuestion(ansData.Id)}\n        >\n          {ansData.Text}\n        </div>\n      )\n    );\n  } else if(quizData?.QuestionId?.Text === \"\") {\n    quizContent = <div className={styles.Quiz__Waiting}>Waiting for others to finish</div>;\n  }\n\n  return (\n    <Panel>\n      <div className={styles.Quiz}>\n        <h1>Quiz nr {matchId}</h1>\n        <div className={styles.Quiz__Question}>\n          <h1>{quizData.QuestionId?.Text}</h1>\n          <div className={styles.Quiz__Answers}>{quizContent}</div>\n        </div>\n      </div>\n    </Panel>\n  );\n};\n\nexport default withRouter(Quiz);\n","import { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { spring, AnimatedSwitch } from \"react-router-transition\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport ReactNotification from \"react-notifications-component\";\nimport 'react-notifications-component/dist/theme.css'\n\nimport { authCheckState } from \"./store/auth/actions\";\nimport \"./App.css\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport MainPage from \"./pages/MainPage/MainPage\";\nimport Register from \"./pages/Register/Register\";\nimport Login from \"./pages/Login/Login\";\nimport Logout from \"./pages/Logout/Logout\";\nimport Matches from \"./pages/Matches/Matches\";\nimport MatchDetail from \"./pages/Matches/MatchDetail/MatchDetail\";\nimport Leagues from \"./pages/Leagues/Leagues\";\nimport Settings from \"./pages/Settings/Settings\";\nimport AddQuestion from \"./pages/AddQuestion/AddQuestion\";\nimport Friends from \"./pages/Friends/Friends\";\nimport LeagueDetail from \"./pages/Leagues/LeagueDetail/LeagueDetail\";\nimport Tournament from \"./pages/Tournament/Tournament\";\nimport Quiz from \"./pages/Quiz/Quiz\";\n\nfunction mapStyles(styles: { opacity: number; scale: number }) {\n  return {\n    opacity: styles.opacity,\n    transform: `scale(${styles.scale})`,\n  };\n}\n\nfunction bounce(val: number) {\n  return spring(val, {\n    stiffness: 330,\n    damping: 22,\n  });\n}\n\nconst bounceTransition = {\n  atEnter: {\n    opacity: 0,\n    scale: 1.2,\n  },\n  atLeave: {\n    opacity: bounce(0),\n    scale: bounce(0.8),\n  },\n  atActive: {\n    opacity: bounce(1),\n    scale: bounce(1),\n  },\n};\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst App = ({ onCheckAuth }: PropsFromRedux) => {\n  useEffect(() => {\n    onCheckAuth();\n  }, [onCheckAuth]);\n\n  return (\n    <>\n      <ReactNotification />\n      <Layout>\n        <AnimatedSwitch\n          atEnter={bounceTransition.atEnter}\n          atLeave={bounceTransition.atLeave}\n          atActive={bounceTransition.atActive}\n          mapStyles={mapStyles}\n          className='switch-wrapper'\n        >\n          <Route path='/register' exact component={Register} />\n          <Route path='/login' exact component={Login} />\n          <Route path='/logout' exact component={Logout} />\n          <Route path='/matches' exact component={Matches} />\n          <Route path='/matches/:matchId' exact component={MatchDetail} />\n          <Route path='/quiz/:matchId' exact component={Quiz} />\n          <Route path='/leagues' exact component={Leagues} />\n          <Route path='/leagues/:leagueId' exact component={LeagueDetail} />\n          <Route path='/tournament/:tournamentId' exact component={Tournament} />\n          <Route path='/settings' exact component={Settings} />\n          <Route path='/add-question' exact component={AddQuestion} />\n          <Route path='/friends' exact component={Friends} />\n          <Route path='/' exact component={MainPage} />\n        </AnimatedSwitch>\n      </Layout>\n    </>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    onCheckAuth: () => dispatch(authCheckState()),\n  };\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default connector(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store/store';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Settings\":\"Settings_Settings__3X3FL\",\"Settings__Form\":\"Settings_Settings__Form__22vgI\",\"Settings__Form__Input\":\"Settings_Settings__Form__Input__3rNtZ\",\"Settings__ErrorMessage\":\"Settings_Settings__ErrorMessage__1L6Hi\",\"Settings__ErrorMessage_show\":\"Settings_Settings__ErrorMessage_show__YbrSP\",\"Settings__Button\":\"Settings_Settings__Button__3qXJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__1Owdi\",\"Menu__Item\":\"Menu_Menu__Item__19KOq\",\"Menu__Item_Active\":\"Menu_Menu__Item_Active__1NFdy\",\"Menu__User\":\"Menu_Menu__User__1OBOP\",\"Menu__User__Name\":\"Menu_Menu__User__Name__N8z4d\",\"Menu__User__Dropdown\":\"Menu_Menu__User__Dropdown__16jiN\",\"Menu__User__Dropdown__Item\":\"Menu_Menu__User__Dropdown__Item__2Yh7P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Panels\":\"MatchDetail_Panels__1QYyK\",\"MatchDetail\":\"MatchDetail_MatchDetail__1nIu6\",\"Created__Edit__Users\":\"MatchDetail_Created__Edit__Users__22S4v\",\"Created__Edit__Questions\":\"MatchDetail_Created__Edit__Questions__3viyZ\",\"Created__Panels\":\"MatchDetail_Created__Panels__1S_49\",\"Created\":\"MatchDetail_Created__3FFEw\",\"Created__Users\":\"MatchDetail_Created__Users__2lEUS\",\"Created__Questions\":\"MatchDetail_Created__Questions__1hM4R\",\"Created__Button\":\"MatchDetail_Created__Button__3fVjm\",\"Created__Start\":\"MatchDetail_Created__Start__2Qicr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__2rkDV\",\"Login__FormBox\":\"Login_Login__FormBox__277u1\",\"Login__Form\":\"Login_Login__Form__16Mbc\",\"Login__Form__Input\":\"Login_Login__Form__Input__Erv3H\",\"Login__ErrorMessage\":\"Login_Login__ErrorMessage__LZ37C\",\"Login__ErrorMessage_show\":\"Login_Login__ErrorMessage_show__1gC_0\",\"Login__Button\":\"Login_Login__Button__2AAc9\",\"Login__RegisterInfo\":\"Login_Login__RegisterInfo__1Xznd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2BYYQ\",\"Button__Transparent\":\"Button_Button__Transparent__33LEg\",\"Button__Transparent_Visited\":\"Button_Button__Transparent_Visited__PNvHs\",\"Button__Filled\":\"Button_Button__Filled__2QIwI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"MainPage_Main__1-SfP\",\"Main__Content\":\"MainPage_Main__Content__28MYM\",\"Main__Promo\":\"MainPage_Main__Promo__3qtDG\",\"Main__Button\":\"MainPage_Main__Button__Glxy9\",\"Leaderboard\":\"MainPage_Leaderboard__3rQjV\",\"LeaderboardBox\":\"MainPage_LeaderboardBox__1L8Hn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Friends\":\"Friends_Friends__2IY9Z\",\"Friends__Buttons\":\"Friends_Friends__Buttons__34OGU\",\"Friends__Button\":\"Friends_Friends__Button__GjXS5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2NSz4\",\"Quiz__Question\":\"Quiz_Quiz__Question__2pbCr\",\"Quiz__Answers\":\"Quiz_Quiz__Answers__33ERo\",\"Quiz__Answers__Answer\":\"Quiz_Quiz__Answers__Answer__3wcpH\",\"Quiz__Waiting\":\"Quiz_Quiz__Waiting__2XULQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Matches\":\"Matches_Matches__2SqwB\",\"Matches__List\":\"Matches_Matches__List__2yvd_\",\"Matches__Button\":\"Matches_Matches__Button__1DrQy\",\"Pagination\":\"Matches_Pagination__3rAK-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Leagues\":\"Leagues_Leagues__1nPwm\",\"Leagues__List\":\"Leagues_Leagues__List__3nul_\",\"Leagues__Button\":\"Leagues_Leagues__Button__3nuCE\",\"Pagination\":\"Leagues_Pagination__IY4me\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FullPage\":\"Layout_FullPage__1P_Ca\",\"CenteredBox\":\"Layout_CenteredBox__2ydAn\",\"PageContent\":\"Layout_PageContent__1SILW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Questions\":\"Questions_Questions__RTS4N\",\"Questions__List\":\"Questions_Questions__List__1YoEX\",\"Pagination\":\"Questions_Pagination__24DQr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LeagueDetail\":\"LeagueDetails_LeagueDetail__FItX1\",\"LeagueDetail__Button\":\"LeagueDetails_LeagueDetail__Button__39es3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__d04QA\",\"Logo__Img\":\"Logo_Logo__Img__1d7eq\",\"Logo__Text\":\"Logo_Logo__Text__3HAxR\",\"logoAnimation\":\"Logo_logoAnimation__31Z1x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__37hEc\",\"Footer__Text\":\"Footer_Footer__Text__-s-pg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tournament\":\"Tournament_Tournament__eIj30\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1CTzX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Panel\":\"Panel_Panel__1rFl7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3w7V8\",\"load8\":\"Loader_load8__1_H9j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"Table_Table__2DxTv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MatchDetail\":\"MatchSummary_MatchDetail__17q0j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Panels\":\"AddQuestion_Panels__2wkzQ\",\"AddQuestion\":\"AddQuestion_AddQuestion__3JEvv\",\"AddQuestion__Form\":\"AddQuestion_AddQuestion__Form__3A_Ul\",\"AddQuestion__Form__Input\":\"AddQuestion_AddQuestion__Form__Input__1hrCB\",\"AddQuestion__AnswersLabel\":\"AddQuestion_AddQuestion__AnswersLabel__2JLEm\",\"AddQuestion__Form__Answer\":\"AddQuestion_AddQuestion__Form__Answer__uBxK1\",\"AddQuestion__Form__Answer__Label\":\"AddQuestion_AddQuestion__Form__Answer__Label__1Kkp6\",\"AddQuestion__Form__Answer__Radio\":\"AddQuestion_AddQuestion__Form__Answer__Radio__2B88M\",\"AddQuestion__ErrorMessage\":\"AddQuestion_AddQuestion__ErrorMessage__TgSkf\",\"AddQuestion__ErrorMessage_show\":\"AddQuestion_AddQuestion__ErrorMessage_show__2u2NA\",\"AddQuestion__Control\":\"AddQuestion_AddQuestion__Control__29nCA\",\"AddQuestion__Control__Button\":\"AddQuestion_AddQuestion__Control__Button__MhPfT\",\"AddQuestion__Button\":\"AddQuestion_AddQuestion__Button__2biff\"};"],"sourceRoot":""}